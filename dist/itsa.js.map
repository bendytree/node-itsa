{"version":3,"sources":["webpack://ItsaLib/webpack/universalModuleDefinition","webpack://ItsaLib/./src/all.ts","webpack://ItsaLib/./src/and.ts","webpack://ItsaLib/./src/any.ts","webpack://ItsaLib/./src/anything.ts","webpack://ItsaLib/./src/array.ts","webpack://ItsaLib/./src/between.ts","webpack://ItsaLib/./src/boolean.ts","webpack://ItsaLib/./src/build.ts","webpack://ItsaLib/./src/clone.ts","webpack://ItsaLib/./src/constructor.ts","webpack://ItsaLib/./src/convert.ts","webpack://ItsaLib/./src/date.ts","webpack://ItsaLib/./src/decorators.ts","webpack://ItsaLib/./src/default.ts","webpack://ItsaLib/./src/email.ts","webpack://ItsaLib/./src/equal.ts","webpack://ItsaLib/./src/falsy.ts","webpack://ItsaLib/./src/function.ts","webpack://ItsaLib/./src/helpers.ts","webpack://ItsaLib/./src/instanceof.ts","webpack://ItsaLib/./src/integer.ts","webpack://ItsaLib/./src/itsa.ts","webpack://ItsaLib/./src/length.ts","webpack://ItsaLib/./src/matches.ts","webpack://ItsaLib/./src/max.ts","webpack://ItsaLib/./src/min.ts","webpack://ItsaLib/./src/not-empty.ts","webpack://ItsaLib/./src/null.ts","webpack://ItsaLib/./src/number.ts","webpack://ItsaLib/./src/object.ts","webpack://ItsaLib/./src/objectid.ts","webpack://ItsaLib/./src/optional.ts","webpack://ItsaLib/./src/serialize.ts","webpack://ItsaLib/./src/string.ts","webpack://ItsaLib/./src/to.ts","webpack://ItsaLib/./src/touch.ts","webpack://ItsaLib/./src/truthy.ts","webpack://ItsaLib/./src/typeof.ts","webpack://ItsaLib/./src/unique.ts","webpack://ItsaLib/./src/validate.ts","webpack://ItsaLib/./src/verify.ts","webpack://ItsaLib/webpack/bootstrap","webpack://ItsaLib/webpack/startup"],"names":[],"mappings":"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","file":"itsa.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ItsaLib\"] = factory();\n\telse\n\t\troot[\"ItsaLib\"] = factory();\n})(this, function() {\nreturn ","import {Itsa} from \"./itsa\";\nimport {ItsaOrPrimative, primitiveToItsa} from \"./helpers\";\n\nclass ItsaAll {\n  all (this:Itsa, ...options:(ItsaOrPrimative | ItsaOrPrimative[])[]):Itsa {\n    const schemas = options.flat().map(x => primitiveToItsa(x)) as Itsa[];\n    for (const schema of schemas) {\n      for (const p of schema.predicates) {\n        this.predicates.push(p);\n      }\n    }\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaAll);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaAll { }\n}\n","import {Itsa} from \"./itsa\";\nimport {ItsaOrPrimative, primitiveToItsa} from \"./helpers\";\n\nexport class ItsaAnd {\n  and (this:Itsa, ...options:(ItsaOrPrimative | ItsaOrPrimative[])[]):Itsa {\n    const schemas = options.flat().map(x => primitiveToItsa(x)) as Itsa[];\n    for (const schema of schemas) {\n      for (const p of schema.predicates) {\n        this.predicates.push(p);\n      }\n    }\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaAnd);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaAnd { }\n}\n","import {ItsaValidateContext, Itsa, ItsaValidator} from \"./itsa\";\nimport {ItsaOrPrimative, primitiveToItsa} from \"./helpers\";\n\ninterface ItsaAnySettings {\n  schemas: Itsa[];\n}\n\nclass ItsaAny {\n  any (this:Itsa, ...options:(ItsaOrPrimative | ItsaOrPrimative[])[]):Itsa {\n    const schemas = options.flat().map(x => primitiveToItsa(x)) as Itsa[];\n    const settings:ItsaAnySettings = { schemas };\n    this.predicates.push({ id: 'any', settings });\n    return this as any as Itsa;\n  }\n}\n\nconst validate:ItsaValidator = {\n  id: 'any',\n  validate: (context:ItsaValidateContext, settings:ItsaAnySettings) => {\n    const { key, val, parent, validation, exists, result } = context;\n    const { schemas } = settings;\n\n    if (schemas.length === 0)\n      return;\n\n    const truthyErrors = [];\n    for (const subSchema of schemas) {\n      const isSchemaTruthy = subSchema.predicates.find(p => !['equal', 'falsy'].includes(p.id));\n\n      const subResult = subSchema._validate({\n        key,\n        parent,\n        val,\n        exists,\n        settings: validation,\n        path: context.path,\n      });\n      if (subResult.ok) {\n        return;\n      }else if (isSchemaTruthy) {\n        truthyErrors.push(subResult.message);\n      }\n    }\n\n    if (truthyErrors.length === 1) {\n      result.registerError(truthyErrors[0]);\n    }else{\n      result.registerError(`No schemas matched.`);\n    }\n  }\n};\n\nItsa.extend(ItsaAny, validate);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaAny { }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\nexport class ItsaAnything {\n  anything(this:Itsa):Itsa {\n    this.predicates.push({ id: 'anything', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaAnything, {\n  id: 'anything',\n  validate: (context:ItsaValidateContext) => {\n\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaAnything { }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\nimport {ItsaOrPrimative, primitiveToItsa} from \"./helpers\";\nimport { ItsaObjectSettings } from './object';\n\ninterface ItsaArraySettings {\n  example?: Itsa;\n}\n\nexport class ItsaArray {\n  array(this:Itsa, example?:ItsaOrPrimative):Itsa {\n    const settings:ItsaArraySettings = { example: example ? primitiveToItsa(example) : null };\n    this.predicates.push({ id: 'array', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaArray, {\n  id: 'array',\n  builder(settings: ItsaArraySettings) {\n    return [];\n  },\n  validate: (context:ItsaValidateContext, settings:ItsaArraySettings) => {\n    const { val, validation, exists, result, type } = context;\n    const { example } = settings;\n\n    if (!Array.isArray(val)) return result.registerError(`Expected array but found ${type}`);\n\n    if (!example) return;\n    if (!val.length) return;\n\n    for (let key=0; key < val.length; key++) {\n      const subVal = val[key];\n      const subResult = example._validate({\n        key,\n        parent: val,\n        val:subVal,\n        exists,\n        settings: validation,\n        path: [...context.path, key],\n      });\n      result.registerResult(subResult);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaArray { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\n\nexport interface ItsaBetweenExtraSettings {\n  inclusive?:boolean;\n}\n\nexport interface ItsaBetweenSettings extends ItsaBetweenExtraSettings {\n  min:any;\n  max:any;\n  inclusive?:boolean;\n}\n\nexport class ItsaBetween {\n  between(this:Itsa, min:any, max:any, extraSettings:ItsaBetweenExtraSettings = {}):Itsa{\n    const settings = extraSettings as ItsaBetweenSettings;\n    settings.min = min;\n    settings.max = max;\n    this.predicates.push({ id: 'between', settings:settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaBetween, {\n  id: 'between',\n  validate: (context:ItsaValidateContext, settings:ItsaBetweenSettings) => {\n    const { val, result } = context;\n    const { min, max } = settings;\n    const inclusive = settings.inclusive ?? true;\n    const isTooLow = inclusive ? (val < min) : (val <= min);\n    if (isTooLow) result.registerError(`Value cannot be under ${min}`);\n    const isTooHigh = inclusive ? (val > max) : (val >= max);\n    if (isTooHigh) result.registerError(`Value cannot be above ${max}`);\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaBetween { }\n}\n","\nimport { ItsaValidateContext } from \"./itsa\";\nimport { Itsa } from \"./itsa\";\n\nexport class ItsaBoolean {\n  boolean(this:Itsa):Itsa{\n    this.predicates.push({ id: 'boolean', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaBoolean, {\n  id: 'boolean',\n  validate: (context:ItsaValidateContext) => {\n    const { type, result } = context;\n    if (type !== 'boolean') result.registerError(`Expected bool but found ${type}`);\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaBoolean { }\n}\n","\nimport { Itsa, ItsaValidator } from './itsa';\n\nfunction build<T>(schema:Itsa):T {\n  for (const predicate of schema.predicates) {\n    const validator: ItsaValidator = Itsa.validators[predicate.id];\n    if (validator.builder) return validator.builder(predicate.settings);\n  }\n};\n\nclass ItsaBuild {\n  build<X>(this:Itsa, overrides?:X):any {\n    const obj = build<X>(this) as any;\n    if (obj && typeof obj === 'object' && overrides && typeof overrides === 'object') {\n      Object.assign(obj, overrides);\n    }\n    return obj;\n  }\n}\n\nItsa.extend(ItsaBuild);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaBuild { }\n}\n","\nimport {itsa, Itsa} from \"./itsa\";\n\nexport class ItsaClone {\n  clone(this:Itsa):Itsa{\n    const raw = JSON.parse(JSON.stringify(this));\n    return itsa.load(raw);\n  }\n}\n\nItsa.extend(ItsaClone);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaClone { }\n}\n","\nimport { ItsaValidateContext } from \"./itsa\";\nimport { Itsa } from \"./itsa\";\n\nexport interface ItsaConstructorSettings {\n  cls:Function;\n}\n\nexport class ItsaConstructor {\n  constructorIs(this:Itsa, cls:Function):Itsa{\n    const settings: ItsaConstructorSettings = { cls };\n    this.predicates.push({ id: 'constructor', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaConstructor, {\n  id: 'constructor',\n  validate: (context:ItsaValidateContext, settings: ItsaConstructorSettings) => {\n    const { val, result } = context;\n    const isMatch = val !== null && val !== undefined && val.constructor === settings.cls;\n    if (!isMatch) return result.registerError(`Expected to be ${settings.cls}`);\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaConstructor { }\n}\n","\nimport { Itsa, ItsaValidateContext } from \"./itsa\";\n\nexport interface ItsaConvertSettings {\n  converter:Function;\n}\n\nexport class ItsaConvert {\n  convert(this:Itsa, converter:Function):Itsa{\n    const settings: ItsaConvertSettings = { converter };\n    this.predicates.push({ id: 'convert', settings });\n    return this as any as Itsa;\n  }\n  to(this:Itsa, converter:Function):Itsa{\n    const settings: ItsaConvertSettings = { converter };\n    this.predicates.push({ id: 'convert', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaConvert, {\n  id: 'convert',\n  validate: (context:ItsaValidateContext, settings: ItsaConvertSettings) => {\n    const { val, setVal, result } = context;\n    const { converter } = settings;\n    if (typeof converter !== 'function') return;\n    try {\n      const newVal = converter(val);\n      setVal(newVal);\n    }catch(e){\n      result.registerError(e);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaConvert { }\n}\n\n","\nimport { ItsaValidateContext } from \"./itsa\";\nimport { Itsa } from \"./itsa\";\n\nexport class ItsaDate {\n  date(this:Itsa):Itsa{\n    this.predicates.push({ id: 'date', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaDate, {\n  id: 'date',\n  validate: (context:ItsaValidateContext) => {\n    const { val, result } = context;\n    const type = Object.prototype.toString.call(val);\n    if (type !== \"[object Date]\") {\n      return result.registerError(`Expected date but found ${type}`);\n    }\n    if (!isFinite(val)) {\n      result.registerError(`Date is not valid`);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaDate { }\n}\n\n","\nimport { Itsa, itsa } from \"./itsa\";\nimport { ItsaObjectSettings } from './object';\n\nconst combineSchemas = (target:Itsa, source:Itsa) => {\n  for (const p of source.predicates) {\n    if (p.id === 'object') {\n      const settings = p.settings as ItsaObjectSettings;\n      if (settings.example) {\n        for (const key of Object.keys(settings.example)) {\n          target.addProperty(key, settings.example[key]);\n        }\n      }\n    }else{\n      target.predicates.push(p);\n    }\n  }\n};\n\nexport class ItsaSchema {\n  static schema: Itsa;\n  constructor(overrides?) {\n    const schema = (this as any).constructor.schema;\n    return schema.build(overrides);\n  }\n}\n\nexport function itsaSchema (schema?:Itsa) {\n  return function (target: any) {\n    if (target.schema && schema) {\n      combineSchemas(target.schema, schema);\n    }else if (schema) {\n      target.schema = schema;\n    }else if (target.schema) {\n      // nothing to do\n    }else{\n      target.schema = itsa.object({});\n    }\n  };\n}\n\nexport function itsaField (schema:Itsa) {\n  return function (target: any, key: string) {\n    const cls = target.constructor;\n    if (!Object.getOwnPropertyDescriptor(cls, 'schema')) {\n      const parentSchema = cls.schema;\n      cls.schema = parentSchema ? parentSchema.clone() : itsa.object({});\n    }\n    cls.schema.addProperty(key, schema);\n  };\n}\n","\nimport { Itsa, ItsaValidateContext } from \"./itsa\";\n\nexport interface ItsaDefaultSettings {\n  val?:any;\n  falsy?: boolean;\n}\n\nexport class ItsaDefault {\n  default(this:Itsa, val, settings:ItsaDefaultSettings = {}):Itsa{\n    settings.val = val;\n    this.predicates.push({ id: 'default', settings });\n    return this as any as Itsa;\n  }\n  defaultNow(this:Itsa):Itsa{\n    this.predicates.push({ id: 'defaultNow', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(\n  ItsaDefault,\n  ...[\n    {\n      id: 'default',\n      builder(settings:ItsaDefaultSettings) {\n        return settings.val;\n      },\n      validate: (context:ItsaValidateContext, settings:ItsaDefaultSettings) => {\n        const { val, setVal } = context;\n        const falsy = settings.falsy ?? false;\n        const doReplace = falsy ? !val : (val === null || val === undefined);\n        if (doReplace) {\n          setVal(settings.val);\n        }\n      }\n    },\n    {\n      id: 'defaultNow',\n      builder(settings:ItsaDefaultSettings) {\n        return new Date();\n      },\n      validate: (context:ItsaValidateContext) => {\n        const { val, setVal } = context;\n        if (val === null || val === undefined) {\n          setVal(new Date());\n        }\n      }\n    }\n  ]\n);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaDefault { }\n}\n\n","\nimport { Itsa, ItsaValidateContext } from \"./itsa\";\n\nconst rx = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\nexport class ItsaEmail {\n  email(this:Itsa):Itsa{\n    this.predicates.push({ id: 'email', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaEmail, {\n  id: 'email',\n  validate: (context:ItsaValidateContext) => {\n    const { val, type, result } = context;\n    if (type !== 'string') return result.registerError(`Expected email but found ${type}`);\n    const isValid = rx.test(val);\n    if (!isValid) {\n      result.registerError('Email address is invalid');\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaEmail { }\n}\n\n","\nimport { Itsa, ItsaValidateContext } from \"./itsa\";\n\nexport interface ItsaEqualSettings {\n  strict?:boolean;\n  example?:any;\n}\n\nexport class ItsaEqual {\n  equal(this:Itsa, val:any, settings:ItsaEqualSettings = {}):Itsa{\n    settings.example = val;\n    this.predicates.push({ id: 'equal', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaEqual, {\n  id: 'equal',\n  validate: (context:ItsaValidateContext, settings:ItsaEqualSettings) => {\n    const { val, result } = context;\n    const { example } = settings;\n    const strict = settings.strict ?? true;\n    const isEqual = strict ? (val === example) : (val == example);\n    if (!isEqual) {\n      result.registerError(`Did not equal ${example}`);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaEqual { }\n}\n\n","\nimport { Itsa, ItsaValidateContext} from \"./itsa\";\n\nexport class ItsaFalsy {\n  falsy(this:Itsa):Itsa{\n    this.predicates.push({ id: 'falsy', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaFalsy, {\n  id: 'falsy',\n  validate: (context:ItsaValidateContext) => {\n    const { val, result } = context;\n    if (val) return result.registerError(`Expected falsy value.`);\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaFalsy { }\n}\n\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\nimport {ItsaOrPrimative, primitiveToItsa} from \"./helpers\";\n\ninterface ItsaFunctionSettings {\n  length?:Itsa;\n}\n\ninterface ItsaFunctionIncomingSettings {\n  length?:ItsaOrPrimative;\n}\n\nexport class ItsaFunction {\n  function(this:Itsa, settings:ItsaFunctionIncomingSettings = {}):Itsa{\n    if (settings.length) settings.length = primitiveToItsa(settings.length);\n    this.predicates.push({ id: 'function', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaFunction, {\n  id: 'function',\n  validate: (context:ItsaValidateContext, settings:ItsaFunctionSettings) => {\n    const { val, type, result } = context;\n    if (type !== 'function') return result.registerError('Expected function');\n    if (settings.length) {\n      const subResult = settings.length._validate({\n        key: 'length',\n        parent: null,\n        val: val.length,\n        exists: true,\n        settings: context.validation,\n        path: context.path,\n      });\n      result.registerResult(subResult);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaFunction { }\n}\n\n","\nimport {itsa, Itsa} from \"./itsa\";\n\nexport declare type ItsaOrPrimative = Itsa | number | string | boolean | null | undefined | Function;\n\nexport function primitiveToItsa (val:ItsaOrPrimative):Itsa {\n  if (val instanceof Itsa) {\n    return val;\n  }else if (typeof val === 'function') {\n    return itsa.constructorIs(val);\n  }else {\n    return itsa.equal(val);\n  }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\ninterface ItsaInstanceOfSettings {\n  cls: any;\n}\n\nexport class ItsaInstanceOf {\n  instanceof(this: Itsa, cls:any):Itsa {\n    const settings:ItsaInstanceOfSettings = { cls };\n    this.predicates.push({ id: 'instanceof', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaInstanceOf, {\n  id: 'instanceof',\n  validate: (context: ItsaValidateContext, settings:ItsaInstanceOfSettings) => {\n    const {val, result} = context;\n    const isInstance = val instanceof settings.cls;\n    if (!isInstance) {\n      result.registerError(`Expected instance of ${settings.cls}`);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaInstanceOf { }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\nexport class ItsaInteger {\n  integer(this:Itsa):Itsa {\n    this.predicates.push({ id: 'integer', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaInteger, {\n  id: 'integer',\n  validate: (context: ItsaValidateContext) => {\n    const {val, result} = context;\n    const valid = typeof val === \"number\"\n      && isNaN(val) === false\n      && [Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY].indexOf(val) === -1\n      && val % 1 === 0;\n    if (!valid) {\n      result.registerError('Invalid integer');\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaInteger { }\n}\n","import { ItsaDefaultSettings } from './default';\n\nexport interface ItsaInternalValidationSettings {\n  val:any;\n  key?:string|number;\n  path:(string|number)[];\n  parent?:object|[];\n  exists: boolean;\n  settings:ItsaValidationSettings;\n}\n\nexport interface ItsaValidationSettings {\n  partial?:boolean;\n  exhaustive?:boolean;\n  hint?:string;\n}\n\nexport interface ItsaError {\n  message:string;\n  key:string | number;\n  path:(string | number)[];\n}\n\nexport class ItsaValidationException extends Error {\n  message: string;\n  result: ItsaValidationResult;\n\n  constructor(result:ItsaValidationResult) {\n    super();\n    const path = result.errors[0].path.join('.');\n    this.message = `${path ? `${path}: ` : ''}${result.errors[0].message}`;\n    this.result = result;\n  }\n}\n\nexport class ItsaValidationResult {\n  ok: boolean = true;\n  errors: ItsaError[] = [];\n  value: any;\n  message?: string;\n\n  okOrThrow(){\n    if (!this.ok) throw new ItsaValidationException(this);\n  }\n\n  addError(error:ItsaError) {\n    this.ok = false;\n    this.message = error.message;\n    this.errors.push(error);\n  }\n\n  addResult(result: ItsaValidationResult) {\n    if (!result.ok) this.ok = false;\n    for (const e of result.errors) {\n      this.errors.push(e);\n    }\n    if (!this.message && this.errors.length) {\n      const err = this.errors[0];\n      this.message = err.message;\n      if (err.path && err.path.length) {\n        this.message += ` (${(err.path||[]).join('.')})`;\n      }\n    }\n  }\n}\n\nexport class ItsaValidationResultBuilder extends ItsaValidationResult {\n  ok = true;\n  errors = [];\n  value = undefined;\n  hint? = undefined;\n  message? = undefined;\n\n  private readonly exhaustive: boolean;\n  private readonly key: string | number;\n  private readonly path: (string | number)[];\n\n  constructor(exhaustive: boolean, key: string | number, path: (string | number)[], hint?: string) {\n    super();\n    this.key = key;\n    this.exhaustive = exhaustive;\n    this.path = path;\n    this.hint = hint;\n  }\n\n  registerError (message:string) {\n    const result = new ItsaValidationResult();\n    const fullMessage = this.hint ? `${this.hint}: ${message}` : message;\n    result.addError({ message: fullMessage, key: this.key, path: this.path });\n    this.addResult(result);\n  }\n\n  registerResult(result: ItsaValidationResult):void{\n    this.addResult(result);\n    if (!this.exhaustive && this.errors.length) {\n      throw 'STOP_ON_FIRST_ERROR';\n    }\n  }\n}\n\nexport interface ItsaValidateContext {\n  parent?:object | [];\n  key?:string | number;\n  path:(string | number)[];\n  exists: boolean;\n  val:any;\n  type: string;\n  setVal:(val:any) => void;\n  validation: ItsaValidationSettings;\n  result: ItsaValidationResultBuilder;\n}\n\nexport interface ItsaPredicate {\n  id:string;\n  settings?:any;\n}\n\nexport interface ItsaValidator {\n  id:string;\n  validate:(ItsaValidateContext, any) => void;\n  builder?:(settings) => any;\n}\n\ntype ItsaSubclass = new (...args: any[]) => any;\n\nexport class Itsa {\n  predicates:ItsaPredicate[] = [];\n  static validators:{[key:string]:ItsaValidator} = {};\n\n  static extend(cls:ItsaSubclass, ...validators: ItsaValidator[]) {\n    for (const validator of validators) {\n      Itsa.validators[validator.id] = validator;\n    }\n\n    const keys = Object.getOwnPropertyNames(cls.prototype).filter(m => m !== 'constructor');\n    for (const key of keys) {\n      const val = cls.prototype[key];\n      Itsa.prototype[key] = val;\n\n      /* istanbul ignore next */\n      if (typeof val === 'function') {\n        itsa[key] = (...args) => {\n          const it = new Itsa();\n          return it[key](...args);\n        };\n      }\n    }\n  }\n}\n\nexport const itsa:Itsa = { predicates: [] } as Itsa;\n\nexport type { ItsaOrPrimative, primitiveToItsa } from './helpers';\n\nimport './all';\nimport './and';\nimport './any';\nimport './anything';\nimport './array';\nimport './between';\nimport './boolean';\nimport './build';\nimport './clone';\nimport './constructor';\nimport './convert';\nimport './date';\nimport './default';\nimport './email';\nimport './equal';\nimport './falsy';\nimport './function';\nimport './instanceof';\nimport './integer';\nimport './length';\nimport './matches';\nimport './max';\nimport './min';\nimport './not-empty';\nimport './null';\nimport './number';\nimport './object';\nimport './objectid';\nimport './optional';\nimport './serialize';\nimport './string';\nimport './to';\nimport './touch';\nimport './truthy';\nimport './typeof';\nimport './unique';\nimport './validate';\nimport './verify';\n\nexport * from './decorators';\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\ninterface ItsaLengthSettings {\n  exactly?:number;\n  min?:number;\n  max?:number;\n}\n\nexport class ItsaLength {\n  length(this: Itsa, min?:number, max?:number):Itsa {\n    let settings:ItsaLengthSettings = {\n      min, max\n    };\n    if (typeof min === 'number' && typeof max !== 'number') {\n      settings = { exactly: min };\n    }\n    if (typeof min !== 'number') {\n      settings = { min: 1 };\n    }\n    this.predicates.push({ id: 'length', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaLength, {\n  id: 'length',\n  validate: (context: ItsaValidateContext, settings:ItsaLengthSettings) => {\n    const {val, result} = context;\n    const len = val ? val.length : null;\n    if (typeof len !== 'number') {\n      return result.registerError('Invalid length');\n    }\n    if (typeof settings.exactly === 'number' && settings.exactly !== len) {\n      return result.registerError(`Expected length to be ${settings.exactly}`);\n    }\n    if (typeof settings.min === 'number' && settings.min > len) {\n      return result.registerError(`Expected length to be at least ${settings.min}`);\n    }\n    if (typeof settings.max === 'number' && settings.max < len) {\n      return result.registerError(`Expected length to be at most ${settings.max}`);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaLength { }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\ninterface ItsaMatchesSettings {\n  regex:RegExp;\n}\n\nexport class ItsaMatches {\n  matches(this: Itsa, regex:RegExp):Itsa {\n    const settings:ItsaMatchesSettings = { regex };\n    this.predicates.push({ id: 'matches', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaMatches, {\n  id: 'matches',\n  validate: (context: ItsaValidateContext, settings: ItsaMatchesSettings) => {\n    const {val, result} = context;\n    const valid = settings.regex.test(String(val));\n    if (!valid) {\n      result.registerError(`Does not match ${settings.regex}`);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaMatches { }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\ninterface ItsaMaxSettings {\n  max:any;\n  inclusive:boolean;\n}\n\nexport class ItsaMax {\n  max(this:Itsa, max:any, inclusive?:boolean):Itsa {\n    inclusive = inclusive ?? true;\n    const settings:ItsaMaxSettings = { max, inclusive };\n    this.predicates.push({ id: 'max', settings });\n    return this as any as Itsa;\n  }\n  under(this:Itsa, max:any, inclusive?:boolean):Itsa {\n    inclusive = inclusive ?? false;\n    const settings:ItsaMaxSettings = { max, inclusive };\n    this.predicates.push({ id: 'max', settings });\n    return this as any as Itsa;\n  }\n  below(this:Itsa, max:any, inclusive?:boolean):Itsa {\n    inclusive = inclusive ?? false;\n    const settings:ItsaMaxSettings = { max, inclusive };\n    this.predicates.push({ id: 'max', settings });\n    return this as any as Itsa;\n  }\n  atMost(this:Itsa, max:any, inclusive?:boolean):Itsa {\n    inclusive = inclusive ?? true;\n    const settings:ItsaMaxSettings = { max, inclusive };\n    this.predicates.push({ id: 'max', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaMax, {\n  id: 'max',\n  validate: (context: ItsaValidateContext, settings: ItsaMaxSettings) => {\n    const { val, result } = context;\n    const { max, inclusive } = settings;\n    if (inclusive) {\n      const ok = val <= max;\n      if (!ok) result.registerError(`Value must be at most ${max}`);\n    } else {\n      const ok = val < max;\n      if (!ok) result.registerError(`Value must be less than ${max}`);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaMax { }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\ninterface ItsaMinSettings {\n  min:any;\n  inclusive:boolean;\n}\n\nexport class ItsaMin {\n  min(this: Itsa, min:any, inclusive?:boolean):Itsa {\n    inclusive = inclusive ?? true;\n    const settings:ItsaMinSettings = { min, inclusive };\n    this.predicates.push({ id: 'min', settings });\n    return this as any as Itsa;\n  }\n  over(this: Itsa, min:any, inclusive?:boolean):Itsa {\n    inclusive = inclusive ?? false;\n    const settings:ItsaMinSettings = { min, inclusive };\n    this.predicates.push({ id: 'min', settings });\n    return this as any as Itsa;\n  }\n  above(this: Itsa, min:any, inclusive?:boolean):Itsa {\n    inclusive = inclusive ?? false;\n    const settings:ItsaMinSettings = { min, inclusive };\n    this.predicates.push({ id: 'min', settings });\n    return this as any as Itsa;\n  }\n  atLeast(this: Itsa, min:any, inclusive?:boolean):Itsa {\n    inclusive = inclusive ?? true;\n    const settings:ItsaMinSettings = { min, inclusive };\n    this.predicates.push({ id: 'min', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaMin, {\n  id: 'min',\n  validate: (context: ItsaValidateContext, settings: ItsaMinSettings) => {\n    const { val, result } = context;\n    const { min, inclusive } = settings;\n    if (inclusive) {\n      const ok = val >= min;\n      if (!ok) result.registerError(`Value must be at least ${min}`);\n    } else {\n      const ok = val > min;\n      if (!ok) result.registerError(`Value must be greater than ${min}`);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaMin { }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\nexport class ItsaNotEmpty {\n  notEmpty(this:Itsa):Itsa {\n    this.predicates.push({ id: 'notEmpty', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaNotEmpty, {\n  id: 'notEmpty',\n  validate: (context: ItsaValidateContext) => {\n    const { val, result } = context;\n    const len = val ? val.length : null;\n    if (typeof len === 'number' && len) {\n      return;\n    }\n\n    if (Object.prototype.toString.call(val) === \"[object Object]\") {\n      let hasFields = false;\n      for (const key in val) {\n        if (!val.hasOwnProperty(key)) { continue; }\n        hasFields = true;\n        break;\n      }\n      if (!hasFields) {\n        result.registerError(`Object cannot be empty`);\n      }\n      return;\n    }\n\n    result.registerError(`Value cannot be empty`);\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaNotEmpty { }\n}\n","import {Itsa} from \"./itsa\";\nimport {ItsaEqualSettings} from \"./equal\";\n\nexport class ItsaNull {\n  null(this:Itsa):Itsa {\n    const settings:ItsaEqualSettings = { example: null, strict: true };\n    this.predicates.push({ id: 'equal', settings });\n    return this as any as Itsa;\n  }\n  undef(this:Itsa):Itsa {\n    const settings:ItsaEqualSettings = { example: undefined, strict: true };\n    this.predicates.push({ id: 'equal', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaNull);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaNull { }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\nexport class ItsaNumber {\n  number(this:Itsa):Itsa {\n    this.predicates.push({ id: 'number' });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaNumber, {\n  id: 'number',\n  validate: (context: ItsaValidateContext) => {\n    const {val, type, result} = context;\n    if (type !== 'number') return result.registerError(`Expected number but type is ${type}.`);\n    if (isNaN(val)) return result.registerError(`Expected number but found NaN.`);\n    if (!isFinite(val)) return result.registerError(`Expected number but found infinity.`);\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaNumber { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\nimport {ItsaOrPrimative, primitiveToItsa} from \"./helpers\";\n\ninterface ItsaObjectExample {\n  [key: string]:Itsa;\n}\n\ninterface ItsaObjectExampleWithPrimitives {\n  [key: string]:ItsaOrPrimative;\n}\n\ninterface ItsaObjectConfig {\n  extras?: boolean;\n  key?: Itsa;\n  value?: Itsa;\n}\n\nexport interface ItsaObjectSettings {\n  example?: ItsaObjectExample;\n  config: ItsaObjectConfig;\n}\n\nexport class ItsaObject {\n  object(this:Itsa, example?:ItsaObjectExampleWithPrimitives, config:ItsaObjectConfig = {}):Itsa{\n    let convertedExample = null;\n    if (example) {\n      convertedExample = {};\n      for (const key in example) {\n        convertedExample[key] = primitiveToItsa(example[key]);\n      }\n    }\n    if (config.key) {\n      config.key = primitiveToItsa(config.key);\n    }\n    if (config.value) {\n      config.value = primitiveToItsa(config.value);\n    }\n    const settings:ItsaObjectSettings = { example:convertedExample as ItsaObjectExample, config };\n    this.predicates.push({ id: 'object', settings });\n    return this as any as Itsa;\n  }\n  addProperty(this:Itsa, key:string, schema:ItsaOrPrimative):Itsa {\n    for (let i = this.predicates.length - 1; i >= 0; i--) {\n      const pred = this.predicates[i];\n      if (pred.id !== 'object') continue;\n      if (!pred.settings) pred.settings = {};\n      if (!pred.settings.example) pred.settings.example = {};\n      if (!pred.settings.config) pred.settings.config = {};\n      pred.settings.example[key] = primitiveToItsa(schema);\n      break;\n    }\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaObject, {\n  id: 'object',\n  builder(settings: ItsaObjectSettings) {\n    const obj = {};\n    const example = settings.example as any;\n    if (example) {\n      const keys = Object.keys(example);\n      for (const key of keys) {\n        const schemaForKey = example[key];\n        obj[key] = schemaForKey.build();\n      }\n    }\n    return obj;\n  },\n  validate: (context:ItsaValidateContext, settings:ItsaObjectSettings) => {\n    const { val, parent, validation, result, type } = context;\n    const { example, config } = settings;\n    const extras = config.extras ?? false;\n\n    // Validate object\n    if (!val) return result.registerError(`Expected object but value is ${val}.`);\n    if (type !== \"object\") return result.registerError(`Expected object but type is ${type}.`);\n    if (val instanceof RegExp) return result.registerError(`Expected object but type is regex.`);\n    if (val instanceof Date) return result.registerError(`Expected object but type is date.`);\n    if (Array.isArray(val)) return result.registerError(`Expected object but type is array.`);\n\n    const objectKeys = Object.keys(val);\n\n    if (example) {\n      // Validate according to example\n      const exampleKeys = Object.keys(example);\n      for (const key of exampleKeys) {\n        // For root object, we might skip missing fields\n        if (!parent && validation.partial && !objectKeys.includes(key)) {\n          continue;\n        }\n\n        const subSchema = example[key];\n        const subResult = subSchema._validate({\n          key,\n          parent:val,\n          val: val[key],\n          exists: key in val,\n          settings: validation,\n          path: [...context.path, key],\n        });\n        result.registerResult(subResult);\n      }\n\n      // Error for extra properties?\n      if (!extras) {\n        const extraKeys = objectKeys.filter(k => !exampleKeys.includes(k));\n        if (extraKeys.length) {\n          result.registerError(`Extra unknown properties: ${extraKeys.join(', ')}`);\n        }\n      }\n    }\n\n    if (config.key) {\n      for (const key of objectKeys) {\n        const subResult = config.key._validate({\n          key,\n          parent: val,\n          val: key,\n          exists: true,\n          settings: validation,\n          path: [...context.path, key],\n        });\n        result.registerResult(subResult);\n      }\n    }\n\n    if (config.value) {\n      for (const key of objectKeys) {\n        const subVal = val[key];\n        const subResult = config.value._validate({\n          key,\n          parent: val,\n          val: subVal,\n          exists: true,\n          settings: validation,\n          path: [...context.path, key],\n        });\n        result.registerResult(subResult);\n      }\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaObject { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\n\nconst rxObjectId = /^[0-9a-f]{24}$/i;\n\nexport class ItsaObjectId {\n  objectid(this:Itsa):Itsa{\n    this.predicates.push({ id: 'objectid', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaObjectId, {\n  id: 'objectid',\n  validate: (context:ItsaValidateContext, settings?:any) => {\n    const { val, result, type } = context;\n    if (!val) return result.registerError('ObjectId is required');\n    if (type !== 'string') return result.registerError('ObjectId must be a string');\n    if (val.length !== 24) return result.registerError('ObjectId must have 24 characters');\n    if (!rxObjectId.test(val)) return result.registerError('ObjectId may only contain 0-9, a-z');\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaObjectId { }\n}\n","\nimport { Itsa, ItsaOrPrimative, ItsaValidateContext } from \"./itsa\";\nimport { primitiveToItsa} from \"./helpers\";\n\ninterface ItsaOptionalSettings {\n  allowedSchema:Itsa;\n}\n\nexport class ItsaOptional {\n  optional(this:Itsa, allowedSchema:ItsaOrPrimative):Itsa{\n    const settings:ItsaOptionalSettings = { allowedSchema: primitiveToItsa(allowedSchema) };\n    this.predicates.push({ id: 'optional', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaOptional, {\n  id: 'optional',\n  validate: (context:ItsaValidateContext, settings:ItsaOptionalSettings) => {\n    const { key, parent, exists, validation, path, val, result } = context;\n    if (val === null) return;\n    if (val === undefined) return;\n\n    const subResult = settings.allowedSchema._validate({\n      key,\n      parent,\n      val,\n      exists,\n      path,\n      settings: validation,\n    });\n    if (!subResult.ok) {\n      return result.registerError(subResult.message);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaOptional { }\n}\n","\nimport {Itsa, ItsaPredicate} from \"./itsa\";\n\ntype RawItsa = {predicates:ItsaPredicate[]};\n\nconst convert = (el:any) => {\n  const proto = Object.prototype.toString.call(el);\n  const isObject = `[object Object]` === proto;\n  const isArray = `[object Array]` === proto;\n  if (!isObject && !isArray) {\n    return el;\n  }\n\n  // replace sub-schemas: depth first\n  for (const key in el) {\n    el[key] = convert(el[key]);\n  }\n\n  if (isObject && el.predicates) {\n    const i = new Itsa();\n    i.predicates = el.predicates;\n    return i;\n  }\n\n  return el;\n}\n\nexport class ItsaSerialize {\n  load(this:Itsa, raw:RawItsa):Itsa{\n    this.predicates = convert(raw).predicates;\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaSerialize);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaSerialize { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\n\nexport class ItsaString {\n  string(this:Itsa):Itsa{\n    this.predicates.push({ id: 'string', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaString, {\n  id: 'string',\n  validate: (context:ItsaValidateContext) => {\n    const { type, result } = context;\n    if (type !== 'string') return result.registerError(`Expected string`);\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaString { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\n\ninterface ItsaToIntSettings {\n  radix?:number;\n}\n\nexport class ItsaTo {\n  toDate(this:Itsa):Itsa{\n    this.predicates.push({ id: 'toDate', settings:null });\n    return this as any as Itsa;\n  }\n  toFloat(this:Itsa):Itsa{\n    this.predicates.push({ id: 'toFloat', settings:null });\n    return this as any as Itsa;\n  }\n  toInt(this:Itsa, radix?:number):Itsa{\n    const settings:ItsaToIntSettings = { radix };\n    this.predicates.push({ id: 'toInt', settings });\n    return this as any as Itsa;\n  }\n  toLowerCase(this:Itsa):Itsa{\n    this.predicates.push({ id: 'toLowerCase' });\n    return this as any as Itsa;\n  }\n  toUpperCase(this:Itsa):Itsa{\n    this.predicates.push({ id: 'toUpperCase' });\n    return this as any as Itsa;\n  }\n  toNow(this:Itsa):Itsa{\n    this.predicates.push({ id: 'toNow' });\n    return this as any as Itsa;\n  }\n  toString(this:Itsa):Itsa{\n    this.predicates.push({ id: 'toString' });\n    return this as any as Itsa;\n  }\n  toTrimmed(this:Itsa):Itsa{\n    this.predicates.push({ id: 'toTrimmed' });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(\n  ItsaTo,\n  {\n    id: 'toDate',\n    validate: (context:ItsaValidateContext) => {\n      const { val, setVal, result } = context;\n      const date = new Date(val);\n      if (!isFinite(date.getTime())) return result.registerError(`Date conversion failed`);\n      setVal(date);\n    }\n  },\n  {\n    id: 'toFloat',\n    validate: (context:ItsaValidateContext) => {\n      const { val, setVal, result } = context;\n      const newFloat = parseFloat(val);\n      if (isNaN(newFloat)) return result.registerError(`Float conversion failed`);\n      setVal(newFloat);\n    }\n  },\n  {\n    id: 'toInt',\n    validate: (context:ItsaValidateContext, settings:ItsaToIntSettings) => {\n      const { val, setVal, result } = context;\n      const { radix } = settings;\n      const newInt = parseInt(val, radix ?? 10);\n      if (isNaN(newInt)) return result.registerError(`Int conversion failed`);\n      setVal(newInt);\n    }\n  },\n  {\n    id: 'toLowerCase',\n    validate: (context:ItsaValidateContext) => {\n      const { val, setVal } = context;\n      setVal(String(val).toLowerCase());\n    }\n  },\n  {\n    id: 'toUpperCase',\n    validate: (context:ItsaValidateContext) => {\n      const { val, setVal } = context;\n      setVal(String(val).toUpperCase());\n    }\n  },\n  {\n    id: 'toNow',\n    validate: (context:ItsaValidateContext) => {\n      const { setVal } = context;\n      setVal(new Date());\n    }\n  },\n  {\n    id: 'toString',\n    validate: (context:ItsaValidateContext) => {\n      const { val, setVal } = context;\n      setVal(String(val));\n    }\n  },\n  {\n    id: 'toTrimmed',\n    validate: (context:ItsaValidateContext) => {\n      const { val, setVal } = context;\n      setVal(String(val).trim());\n    }\n  },\n);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaTo { }\n}\n","\nimport { Itsa } from './itsa';\nimport { ItsaObjectSettings } from './object';\n\nclass ItsaTouch {\n  touch<X>(this:Itsa, obj:X, toucher?:(string, X) => void):X {\n    const objectPredicates = this.predicates.filter(p => p.id === 'object');\n    if (!objectPredicates.length) throw new Error(`This is not an object schema.`);\n    if (!obj) return obj;\n    for (const predicate of objectPredicates) {\n      const settings = predicate.settings as ItsaObjectSettings;\n      const example = settings.example as any;\n      if (!example) throw new Error(`A schema example is required.`);\n      const keys = Object.keys(example);\n      for (const key of keys) {\n        if (!(key in obj)) {\n          if (toucher) {\n            toucher(key, obj);\n          }else{\n            obj[key] = undefined;\n          }\n        }\n      }\n    }\n    return obj;\n  }\n}\n\nItsa.extend(ItsaTouch);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaTouch { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\n\nexport class ItsaTruthy {\n  truthy(this:Itsa):Itsa{\n    this.predicates.push({ id: 'truthy', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaTruthy, {\n  id: 'truthy',\n  validate: (context:ItsaValidateContext) => {\n    const { val, result } = context;\n    if (!val) return result.registerError(`Expected truthy value.`);\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaTruthy { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\n\ninterface ItsaTypeOfSettings {\n  type: string;\n}\n\nexport class ItsaTypeOf {\n  typeof(this:Itsa, type:string):Itsa{\n    const settings: ItsaTypeOfSettings = { type };\n    this.predicates.push({ id: 'typeof', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaTypeOf, {\n  id: 'typeof',\n  validate: (context:ItsaValidateContext, settings: ItsaTypeOfSettings) => {\n    const { val, result } = context;\n    const { type } = settings;\n    const actualType = typeof val;\n    if (type !== actualType) {\n      result.registerError(`Expected ${type}`);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaTypeOf { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\n\ninterface ItsaUniqueSettings {\n  getter?: Function;\n}\n\nexport class ItsaUnique {\n  unique(this:Itsa, getter?:Function):Itsa{\n    const settings: ItsaUniqueSettings = { getter };\n    this.predicates.push({ id: 'unique', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaUnique, {\n  id: 'unique',\n  validate: (context:ItsaValidateContext, settings: ItsaUniqueSettings) => {\n    const { val, result } = context;\n    const { getter } = settings;\n    const set = new Set();\n    for (const key in val) {\n      let subVal = val[key];\n      if (getter) subVal = getter(subVal);\n      if (set.has(subVal)) {\n        return result.registerError(`${subVal} occurred multiple times`);\n      }\n      set.add(subVal);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaUnique { }\n}\n","\nimport {\n  Itsa,\n  ItsaValidator,\n  ItsaValidateContext,\n  ItsaInternalValidationSettings,\n  ItsaValidationResult,\n  ItsaValidationSettings,\n  ItsaValidationResultBuilder\n} from './itsa';\n\nclass ItsaValidation {\n  _validate(this:Itsa, settings:ItsaInternalValidationSettings):ItsaValidationResultBuilder {\n    const { key } = settings;\n    const result = new ItsaValidationResultBuilder(settings.settings.exhaustive, key, settings.path, settings.settings.hint);\n    result.value = settings.val;\n    try {\n      const setVal = (newVal:any) => {\n        if (settings.parent) {\n          settings.parent[settings.key] = newVal;\n          settings.val = newVal;\n        }else{\n          result.value = newVal;\n        }\n      };\n      for (const predicate of this.predicates) {\n        const validator:ItsaValidator = Itsa.validators[predicate.id];\n\n        /* istanbul ignore next */\n        if (!validator) throw new Error(`Validator not found: ${predicate.id}`);\n\n        const context:ItsaValidateContext = {\n          setVal,\n          result,\n          val: settings.val,\n          key: settings.key,\n          parent: settings.parent,\n          exists: settings.exists,\n          type: typeof settings.val,\n          validation: settings.settings,\n          path: settings.path,\n        };\n        validator.validate(context, predicate.settings);\n        if (!result.ok) return result;\n      }\n    }catch (e){\n      /* istanbul ignore next */\n      if (e !== 'STOP_ON_FIRST_ERROR') throw e;\n    }\n    return result;\n  }\n\n  validate(this:Itsa, val: any, settings:ItsaValidationSettings = {}):ItsaValidationResult {\n    return this._validate({\n      val,\n      settings,\n      key:null,\n      parent:null,\n      exists: true,\n      path: [],\n    });\n  }\n\n  validOrThrow(this:Itsa, val:any, settings?:ItsaValidationSettings) {\n    this.validate(val, settings).okOrThrow();\n  }\n}\n\nItsa.extend(ItsaValidation);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaValidation { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\n\ninterface ItsaVerifySettings {\n  verifier: Function;\n}\n\nexport class ItsaVerify {\n  verify(this:Itsa, verifier:Function):Itsa{\n    const settings: ItsaVerifySettings = { verifier };\n    this.predicates.push({ id: 'verify', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaVerify, {\n  id: 'verify',\n  validate: (context:ItsaValidateContext, settings: ItsaVerifySettings) => {\n    const { val, result } = context;\n    const { verifier } = settings;\n    try {\n      const response = verifier(val);\n      if (typeof response === 'boolean') {\n        if (response === false) {\n          result.registerError(`Value is invalid`);\n        }\n        return;\n      }\n      if (typeof response === 'string') {\n        return result.registerError(response);\n      }\n    }catch(e){\n      if (e === 'STOP_ON_FIRST_ERROR') throw e;\n      return result.registerError(e);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaVerify { }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(589);\n"],"sourceRoot":""}