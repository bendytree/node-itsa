{"version":3,"sources":["webpack://ItsaLib/webpack/universalModuleDefinition","webpack://ItsaLib/./src/all.ts","webpack://ItsaLib/./src/and.ts","webpack://ItsaLib/./src/any.ts","webpack://ItsaLib/./src/anything.ts","webpack://ItsaLib/./src/array.ts","webpack://ItsaLib/./src/between.ts","webpack://ItsaLib/./src/boolean.ts","webpack://ItsaLib/./src/build.ts","webpack://ItsaLib/./src/clone-rfdc.ts","webpack://ItsaLib/./src/clone.ts","webpack://ItsaLib/./src/constructor.ts","webpack://ItsaLib/./src/convert.ts","webpack://ItsaLib/./src/date.ts","webpack://ItsaLib/./src/decorators.ts","webpack://ItsaLib/./src/default.ts","webpack://ItsaLib/./src/email.ts","webpack://ItsaLib/./src/equal.ts","webpack://ItsaLib/./src/extend.ts","webpack://ItsaLib/./src/falsy.ts","webpack://ItsaLib/./src/function.ts","webpack://ItsaLib/./src/get.ts","webpack://ItsaLib/./src/helpers.ts","webpack://ItsaLib/./src/instanceof.ts","webpack://ItsaLib/./src/integer.ts","webpack://ItsaLib/./src/itsa.ts","webpack://ItsaLib/./src/keep.ts","webpack://ItsaLib/./src/length.ts","webpack://ItsaLib/./src/matches.ts","webpack://ItsaLib/./src/max.ts","webpack://ItsaLib/./src/message.ts","webpack://ItsaLib/./src/min.ts","webpack://ItsaLib/./src/not-empty.ts","webpack://ItsaLib/./src/null.ts","webpack://ItsaLib/./src/number.ts","webpack://ItsaLib/./src/object.ts","webpack://ItsaLib/./src/objectid.ts","webpack://ItsaLib/./src/openapi.ts","webpack://ItsaLib/./src/optional.ts","webpack://ItsaLib/./src/partialed.ts","webpack://ItsaLib/./src/serialize.ts","webpack://ItsaLib/./src/string.ts","webpack://ItsaLib/./src/to.ts","webpack://ItsaLib/./src/touch.ts","webpack://ItsaLib/./src/truthy.ts","webpack://ItsaLib/./src/typeof.ts","webpack://ItsaLib/./src/unique.ts","webpack://ItsaLib/./src/validate.ts","webpack://ItsaLib/./src/verify.ts","webpack://ItsaLib/webpack/bootstrap","webpack://ItsaLib/webpack/startup"],"names":["root","factory","exports","module","define","amd","this","ItsaAll","options","schemas","flat","map","x","primitiveToItsa","schema","predicates","p","push","Itsa","extend","ItsaAnd","ItsaAny","settings","id","validate","context","key","val","parent","validation","exists","result","length","truthyErrors","subSchema","isSchemaTruthy","find","includes","subResult","_validate","path","ok","message","registerError","ItsaAnything","ItsaArray","example","builder","type","Array","isArray","subVal","registerResult","ItsaBetween","min","max","extraSettings","inclusive","ItsaBoolean","ItsaBuild","overrides","obj","predicate","validator","validators","Object","assign","copyBuffer","cur","Buffer","from","constructor","buffer","slice","byteOffset","deepClone","opts","circles","refs","refsNew","proto","cloneProto","clone","cloneArray","a","fn","keys","a2","i","k","Date","ArrayBuffer","isView","index","indexOf","o","Map","Set","o2","hasOwnProperty","call","pop","rfdcCircles","RegExp","rfdc","ItsaClone","raw","itsa","load","ItsaConstructor","cls","ItsaConvert","converter","setVal","e","ItsaDate","prototype","toString","isFinite","build","target","source","addProperty","config","extras","filter","forEach","combineSchemas","object","undefined","Error","getOwnPropertyDescriptor","parentSchema","ItsaDefault","falsy","rx","ItsaEmail","test","ItsaEqual","strict","ItsaExtend","extendor","ItsaFalsy","ItsaFunction","ItsaGet","any","ex","and","constructorIs","equal","ItsaInstanceOf","ItsaInteger","isNaN","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","ItsaValidationException","errors","join","ItsaValidationResult","error","err","ItsaValidationResultBuilder","exhaustive","hint","value","pathStr","messageFormat","msgDataSegments","replace","split","JSON","stringify","addError","addResult","getOwnPropertyNames","m","it","fields","parsedFields","f","rest","keysToDelete","exampleForKey","matchingFields","pf","field","partial","entries","pred","allowedSchema","ItsaKeep","ItsaLength","exactly","len","ItsaMatches","regex","String","ItsaMax","msg","_message","ItsaMin","ItsaNotEmpty","hasFields","ItsaNull","ItsaNumber","ItsaObject","convertedExample","schemaForKey","objectKeys","exampleKeys","isMissing","extraKeys","rxObjectId","ItsaObjectId","ItsaOpenApiSchema","flatMap","lookup","properties","required","keySchema","get","isRequired","toOpenApiSchema","items","s","format","match","pattern","minLength","maxLength","getOpenApiTypeForValue","const","anyPredicateSchemas","subSchemas","allSame","ss","allConst","enum","oneOf","minimum","maximum","exclusiveMinimum","exclusiveMaximum","_defaults","ItsaOptional","allowedTypes","forEachValue","handler","partialize","restOfKeys","ItsaPartialed","convert","el","isObject","ItsaSerialize","toJSON","ItsaString","ItsaTo","radix","date","getTime","newFloat","parseFloat","newInt","parseInt","toLowerCase","toUpperCase","trim","ItsaTouch","toucher","objectPredicates","touched","touch","ItsaTruthy","ItsaTypeOf","ItsaUnique","getter","set","has","add","ItsaValidation","newVal","withMessageFormat","okOrThrow","ItsaVerify","verifier","response","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"mappings":"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","file":"itsa.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ItsaLib\"] = factory();\n\telse\n\t\troot[\"ItsaLib\"] = factory();\n})(this, function() {\nreturn ","import {Itsa} from \"./itsa\";\nimport {ItsaOrPrimative, primitiveToItsa} from \"./helpers\";\n\nclass ItsaAll {\n  all (this:Itsa, ...options:(ItsaOrPrimative | ItsaOrPrimative[])[]):Itsa {\n    const schemas = options.flat().map(x => primitiveToItsa(x)) as Itsa[];\n    for (const schema of schemas) {\n      for (const p of schema.predicates) {\n        this.predicates.push(p);\n      }\n    }\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaAll);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaAll { }\n}\n","import {Itsa} from \"./itsa\";\nimport {ItsaOrPrimative, primitiveToItsa} from \"./helpers\";\n\nexport class ItsaAnd {\n  and (this:Itsa, ...options:(ItsaOrPrimative | ItsaOrPrimative[])[]):Itsa {\n    const schemas = options.flat().map(x => primitiveToItsa(x)) as Itsa[];\n    for (const schema of schemas) {\n      for (const p of schema.predicates) {\n        this.predicates.push(p);\n      }\n    }\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaAnd);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaAnd { }\n}\n","import {ItsaValidateContext, Itsa, ItsaValidator} from \"./itsa\";\nimport {ItsaOrPrimative, primitiveToItsa} from \"./helpers\";\n\ninterface ItsaAnySettings {\n  schemas: Itsa[];\n}\n\nclass ItsaAny {\n  any (this:Itsa, ...options:(ItsaOrPrimative | ItsaOrPrimative[])[]):Itsa {\n    const schemas = options.flat().map(x => primitiveToItsa(x)) as Itsa[];\n    const settings:ItsaAnySettings = { schemas };\n    this.predicates.push({ id: 'any', settings });\n    return this as any as Itsa;\n  }\n}\n\nconst validate:ItsaValidator = {\n  id: 'any',\n  validate: (context:ItsaValidateContext, settings:ItsaAnySettings) => {\n    const { key, val, parent, validation, exists, result } = context;\n    const { schemas } = settings;\n\n    if (schemas.length === 0)\n      return;\n\n    const truthyErrors = [];\n    for (const subSchema of schemas) {\n      const isSchemaTruthy = subSchema.predicates.find(p => !['equal', 'falsy'].includes(p.id));\n\n      const subResult = subSchema._validate({\n        key,\n        parent,\n        val,\n        exists,\n        settings: validation,\n        path: context.path,\n      });\n      if (subResult.ok) {\n        return;\n      }else if (isSchemaTruthy) {\n        truthyErrors.push(subResult.message);\n      }\n    }\n\n    if (truthyErrors.length === 1) {\n      result.registerError(truthyErrors[0], val);\n    }else{\n      result.registerError(`No schemas matched.`, val);\n    }\n  }\n};\n\nItsa.extend(ItsaAny, validate);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaAny { }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\nexport class ItsaAnything {\n  anything(this:Itsa):Itsa {\n    this.predicates.push({ id: 'anything', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaAnything, {\n  id: 'anything',\n  validate: (context:ItsaValidateContext) => {\n\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaAnything { }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\nimport {ItsaOrPrimative, primitiveToItsa} from \"./helpers\";\n\ninterface ItsaArraySettings {\n  example?: Itsa;\n}\n\nexport class ItsaArray {\n  array(this:Itsa, example?:ItsaOrPrimative):Itsa {\n    const settings:ItsaArraySettings = { example: example ? primitiveToItsa(example) : null };\n    this.predicates.push({ id: 'array', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaArray, {\n  id: 'array',\n  builder(settings: ItsaArraySettings) {\n    return [];\n  },\n  validate: (context:ItsaValidateContext, settings:ItsaArraySettings) => {\n    const { val, validation, exists, result, type } = context;\n    const { example } = settings;\n\n    if (!Array.isArray(val)) return result.registerError(`Expected array but found ${type}`, val);\n\n    if (!example) return;\n    if (!val.length) return;\n\n    for (let key=0; key < val.length; key++) {\n      const subVal = val[key];\n      const subResult = example._validate({\n        key,\n        parent: val,\n        val:subVal,\n        exists,\n        settings: validation,\n        path: [...context.path, key],\n      });\n      result.registerResult(subResult);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaArray { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\n\nexport interface ItsaBetweenExtraSettings {\n  inclusive?:boolean;\n}\n\nexport interface ItsaBetweenSettings extends ItsaBetweenExtraSettings {\n  min:any;\n  max:any;\n  inclusive?:boolean;\n}\n\nexport class ItsaBetween {\n  between(this:Itsa, min:any, max:any, extraSettings:ItsaBetweenExtraSettings = {}):Itsa{\n    const settings = extraSettings as ItsaBetweenSettings;\n    settings.min = min;\n    settings.max = max;\n    this.predicates.push({ id: 'between', settings:settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaBetween, {\n  id: 'between',\n  validate: (context:ItsaValidateContext, settings:ItsaBetweenSettings) => {\n    const { val, result } = context;\n    const { min, max } = settings;\n    const inclusive = settings.inclusive ?? true;\n    const isTooLow = inclusive ? (val < min) : (val <= min);\n    if (isTooLow) result.registerError(`Value cannot be under ${min}`, val);\n    const isTooHigh = inclusive ? (val > max) : (val >= max);\n    if (isTooHigh) result.registerError(`Value cannot be above ${max}`, val);\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaBetween { }\n}\n","\nimport { ItsaValidateContext } from \"./itsa\";\nimport { Itsa } from \"./itsa\";\n\nexport class ItsaBoolean {\n  boolean(this:Itsa):Itsa{\n    this.predicates.push({ id: 'boolean', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaBoolean, {\n  id: 'boolean',\n  validate: (context:ItsaValidateContext) => {\n    const { type, result, val } = context;\n    if (type !== 'boolean') result.registerError(`Expected bool but found ${type}`, val);\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaBoolean { }\n}\n","\nimport { Itsa, ItsaValidator } from './itsa';\n\nfunction build<T>(schema:Itsa):T {\n  for (const predicate of schema.predicates) {\n    const validator: ItsaValidator = Itsa.validators[predicate.id];\n    if (validator.builder) return validator.builder(predicate.settings);\n  }\n};\n\nclass ItsaBuild {\n  build<X>(this:Itsa, overrides?:X):any {\n    const obj = build<X>(this) as any;\n    if (obj && typeof obj === 'object' && overrides && typeof overrides === 'object') {\n      Object.assign(obj, overrides);\n    }\n    return obj;\n  }\n}\n\nItsa.extend(ItsaBuild);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaBuild { }\n}\n","'use strict'\n\n/**\n * License: MIT\n * https://github.com/davidmarkclements/rfdc/tree/6232d1d82247d239306b9c4e00820eca2a5d6efe\n */\n\nfunction copyBuffer (cur) {\n  if (cur instanceof Buffer) {\n    return Buffer.from(cur)\n  }\n\n  return new cur.constructor(cur.buffer.slice(), cur.byteOffset, cur.length)\n}\n\nfunction rfdc (opts) {\n  opts = opts || {}\n\n  if (opts.circles) return rfdcCircles(opts)\n  return opts.proto ? cloneProto : clone\n\n  function cloneArray (a, fn) {\n    var keys = Object.keys(a)\n    var a2 = new Array(keys.length)\n    for (var i = 0; i < keys.length; i++) {\n      var k = keys[i]\n      var cur = a[k]\n      if (typeof cur !== 'object' || cur === null) {\n        a2[k] = cur\n      } else if (cur instanceof Date) {\n        a2[k] = new Date(cur)\n      } else if (ArrayBuffer.isView(cur)) {\n        a2[k] = copyBuffer(cur)\n      } else {\n        a2[k] = fn(cur)\n      }\n    }\n    return a2\n  }\n\n  function clone (o) {\n    if (typeof o !== 'object' || o === null) return o\n    if (o instanceof Date) return new Date(o)\n    if (Array.isArray(o)) return cloneArray(o, clone)\n    if (o instanceof Map) return new Map(cloneArray(Array.from(o), clone))\n    if (o instanceof Set) return new Set(cloneArray(Array.from(o), clone))\n    var o2 = {}\n    for (var k in o) {\n      if (Object.hasOwnProperty.call(o, k) === false) continue\n      var cur = o[k]\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur\n      } else if (cur instanceof Date) {\n        o2[k] = new Date(cur)\n      } else if (cur instanceof Map) {\n        o2[k] = new Map(cloneArray(Array.from(cur), clone))\n      } else if (cur instanceof Set) {\n        o2[k] = new Set(cloneArray(Array.from(cur), clone))\n      } else if (cur instanceof RegExp) {\n        o2[k] = cur\n      } else if (ArrayBuffer.isView(cur)) {\n        o2[k] = copyBuffer(cur)\n      } else {\n        o2[k] = clone(cur)\n      }\n    }\n    return o2\n  }\n\n  function cloneProto (o) {\n    if (typeof o !== 'object' || o === null) return o\n    if (o instanceof Date) return new Date(o)\n    if (Array.isArray(o)) return cloneArray(o, cloneProto)\n    if (o instanceof Map) return new Map(cloneArray(Array.from(o), cloneProto))\n    if (o instanceof Set) return new Set(cloneArray(Array.from(o), cloneProto))\n    var o2 = {}\n    for (var k in o) {\n      var cur = o[k]\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur\n      } else if (cur instanceof Date) {\n        o2[k] = new Date(cur)\n      } else if (cur instanceof Map) {\n        o2[k] = new Map(cloneArray(Array.from(cur), cloneProto))\n      } else if (cur instanceof Set) {\n        o2[k] = new Set(cloneArray(Array.from(cur), cloneProto))\n      } else if (ArrayBuffer.isView(cur)) {\n        o2[k] = copyBuffer(cur)\n      } else {\n        o2[k] = cloneProto(cur)\n      }\n    }\n    return o2\n  }\n}\n\nfunction rfdcCircles (opts) {\n  var refs = []\n  var refsNew = []\n\n  return opts.proto ? cloneProto : clone\n\n  function cloneArray (a, fn) {\n    var keys = Object.keys(a)\n    var a2 = new Array(keys.length)\n    for (var i = 0; i < keys.length; i++) {\n      var k = keys[i]\n      var cur = a[k]\n      if (typeof cur !== 'object' || cur === null) {\n        a2[k] = cur\n      } else if (cur instanceof Date) {\n        a2[k] = new Date(cur)\n      } else if (ArrayBuffer.isView(cur)) {\n        a2[k] = copyBuffer(cur)\n      } else {\n        var index = refs.indexOf(cur)\n        if (index !== -1) {\n          a2[k] = refsNew[index]\n        } else {\n          a2[k] = fn(cur)\n        }\n      }\n    }\n    return a2\n  }\n\n  function clone (o) {\n    if (typeof o !== 'object' || o === null) return o\n    if (o instanceof Date) return new Date(o)\n    if (Array.isArray(o)) return cloneArray(o, clone)\n    if (o instanceof Map) return new Map(cloneArray(Array.from(o), clone))\n    if (o instanceof Set) return new Set(cloneArray(Array.from(o), clone))\n    var o2 = {}\n    refs.push(o)\n    refsNew.push(o2)\n    for (var k in o) {\n      if (Object.hasOwnProperty.call(o, k) === false) continue\n      var cur = o[k]\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur\n      } else if (cur instanceof Date) {\n        o2[k] = new Date(cur)\n      } else if (cur instanceof Map) {\n        o2[k] = new Map(cloneArray(Array.from(cur), clone))\n      } else if (cur instanceof Set) {\n        o2[k] = new Set(cloneArray(Array.from(cur), clone))\n      } else if (ArrayBuffer.isView(cur)) {\n        o2[k] = copyBuffer(cur)\n      } else {\n        var i = refs.indexOf(cur)\n        if (i !== -1) {\n          o2[k] = refsNew[i]\n        } else {\n          o2[k] = clone(cur)\n        }\n      }\n    }\n    refs.pop()\n    refsNew.pop()\n    return o2\n  }\n\n  function cloneProto (o) {\n    if (typeof o !== 'object' || o === null) return o\n    if (o instanceof Date) return new Date(o)\n    if (Array.isArray(o)) return cloneArray(o, cloneProto)\n    if (o instanceof Map) return new Map(cloneArray(Array.from(o), cloneProto))\n    if (o instanceof Set) return new Set(cloneArray(Array.from(o), cloneProto))\n    var o2 = {}\n    refs.push(o)\n    refsNew.push(o2)\n    for (var k in o) {\n      var cur = o[k]\n      if (typeof cur !== 'object' || cur === null) {\n        o2[k] = cur\n      } else if (cur instanceof Date) {\n        o2[k] = new Date(cur)\n      } else if (cur instanceof Map) {\n        o2[k] = new Map(cloneArray(Array.from(cur), cloneProto))\n      } else if (cur instanceof Set) {\n        o2[k] = new Set(cloneArray(Array.from(cur), cloneProto))\n      } else if (ArrayBuffer.isView(cur)) {\n        o2[k] = copyBuffer(cur)\n      } else {\n        var i = refs.indexOf(cur)\n        if (i !== -1) {\n          o2[k] = refsNew[i]\n        } else {\n          o2[k] = cloneProto(cur)\n        }\n      }\n    }\n    refs.pop()\n    refsNew.pop()\n    return o2\n  }\n}\n\n\nexport const deepClone = rfdc({ proto: false, circles: false });\n","\nimport {itsa, Itsa} from \"./itsa\";\nimport { deepClone } from './clone-rfdc';\n\nexport class ItsaClone {\n  clone(this:Itsa):Itsa{\n    const raw = deepClone(this);\n    return itsa.load(raw);\n  }\n}\n\nItsa.extend(ItsaClone);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaClone { }\n}\n","\nimport { ItsaValidateContext } from \"./itsa\";\nimport { Itsa } from \"./itsa\";\n\nexport interface ItsaConstructorSettings {\n  cls:Function;\n}\n\nexport class ItsaConstructor {\n  constructorIs(this:Itsa, cls:Function):Itsa{\n    const settings: ItsaConstructorSettings = { cls };\n    this.predicates.push({ id: 'constructor', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaConstructor, {\n  id: 'constructor',\n  validate: (context:ItsaValidateContext, settings: ItsaConstructorSettings) => {\n    const { val, result } = context;\n    const isMatch = val !== null && val !== undefined && val.constructor === settings.cls;\n    if (!isMatch) return result.registerError(`Expected to be ${settings.cls}`, val);\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaConstructor { }\n}\n","\nimport { Itsa, ItsaValidateContext } from \"./itsa\";\n\nexport interface ItsaConvertSettings {\n  converter:Function;\n}\n\nexport class ItsaConvert {\n  convert(this:Itsa, converter:Function):Itsa{\n    const settings: ItsaConvertSettings = { converter };\n    this.predicates.push({ id: 'convert', settings });\n    return this as any as Itsa;\n  }\n  to(this:Itsa, converter:Function):Itsa{\n    const settings: ItsaConvertSettings = { converter };\n    this.predicates.push({ id: 'convert', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaConvert, {\n  id: 'convert',\n  validate: (context:ItsaValidateContext, settings: ItsaConvertSettings) => {\n    const { val, setVal, result } = context;\n    const { converter } = settings;\n    if (typeof converter !== 'function') return;\n    try {\n      const newVal = converter(val);\n      setVal(newVal);\n    }catch(e){\n      result.registerError(e, val);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaConvert { }\n}\n\n","\nimport { ItsaValidateContext } from \"./itsa\";\nimport { Itsa } from \"./itsa\";\n\nexport class ItsaDate {\n  date(this:Itsa):Itsa{\n    this.predicates.push({ id: 'date', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaDate, {\n  id: 'date',\n  validate: (context:ItsaValidateContext) => {\n    const { val, result } = context;\n    const type = Object.prototype.toString.call(val);\n    if (type !== \"[object Date]\") {\n      return result.registerError(`Expected date but found ${type}`, val);\n    }\n    if (!isFinite(val)) {\n      result.registerError(`Date is not valid`, val);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaDate { }\n}\n\n","\nimport { Itsa, itsa } from \"./itsa\";\nimport { ItsaObjectSettings } from './object';\n\nconst combineSchemas = (target:Itsa, source:Itsa) => {\n  for (const p of source.predicates) {\n    if (p.id === 'object') {\n      const settings = p.settings as ItsaObjectSettings;\n      if (settings.example) {\n        for (const key of Object.keys(settings.example)) {\n          target.addProperty(key, settings.example[key]);\n        }\n      }\n    }else{\n      target.predicates.push(p);\n    }\n  }\n\n  // If any allow extras, all should\n  const allowExtras = !!source.predicates.find(p => p.id === 'object' && p.settings?.config?.extras === true);\n  if (allowExtras) {\n    target.predicates.filter(p => p.id === 'object').forEach(p => p.settings.config.extras = true);\n  }\n};\n\nexport class ItsaSchema {\n  static schema: Itsa;\n  constructor(overrides?) {\n    const schema = (this as any).constructor.schema;\n    return schema.build(overrides);\n  }\n}\n\nexport function itsaSchema (schema?:Itsa) {\n  return function (target: any) {\n    if (target.schema && schema) {\n      combineSchemas(target.schema, schema);\n    }else if (schema) {\n      target.schema = schema;\n    }else if (target.schema) {\n      // nothing to do\n    }else{\n      target.schema = itsa.object({});\n    }\n  };\n}\n\nexport function itsaField (schema:Itsa) {\n  if (schema === undefined) throw new Error(`itsaField schema may not be undefined`);\n  return function (target: any, key: string) {\n    const cls = target.constructor;\n    if (!Object.getOwnPropertyDescriptor(cls, 'schema')) {\n      const parentSchema = cls.schema;\n      cls.schema = parentSchema ? parentSchema.clone() : itsa.object({});\n    }\n    cls.schema.addProperty(key, schema);\n  };\n}\n","\nimport { Itsa, ItsaValidateContext } from \"./itsa\";\n\nexport interface ItsaDefaultSettings {\n  val?:any;\n  falsy?: boolean;\n}\n\nexport class ItsaDefault {\n  default(this:Itsa, val, settings:ItsaDefaultSettings = {}):Itsa{\n    settings.val = val;\n    this.predicates.push({ id: 'default', settings });\n    return this as any as Itsa;\n  }\n  defaultNow(this:Itsa):Itsa{\n    this.predicates.push({ id: 'defaultNow', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(\n  ItsaDefault,\n  ...[\n    {\n      id: 'default',\n      builder(settings:ItsaDefaultSettings) {\n        return settings.val;\n      },\n      validate: (context:ItsaValidateContext, settings:ItsaDefaultSettings) => {\n        const { val, setVal } = context;\n        const falsy = settings.falsy ?? false;\n        const doReplace = falsy ? !val : (val === null || val === undefined);\n        if (doReplace) {\n          setVal(settings.val);\n        }\n      }\n    },\n    {\n      id: 'defaultNow',\n      builder(settings:ItsaDefaultSettings) {\n        return new Date();\n      },\n      validate: (context:ItsaValidateContext) => {\n        const { val, setVal } = context;\n        if (val === null || val === undefined) {\n          setVal(new Date());\n        }\n      }\n    }\n  ]\n);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaDefault { }\n}\n\n","\nimport { Itsa, ItsaValidateContext } from \"./itsa\";\n\nconst rx = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\nexport class ItsaEmail {\n  email(this:Itsa):Itsa{\n    this.predicates.push({ id: 'email', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaEmail, {\n  id: 'email',\n  validate: (context:ItsaValidateContext) => {\n    const { val, type, result } = context;\n    if (type !== 'string') return result.registerError(`Expected email but found ${type}`, val);\n    const isValid = rx.test(val);\n    if (!isValid) {\n      result.registerError('Email address is invalid', val);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaEmail { }\n}\n\n","\nimport { Itsa, ItsaValidateContext } from \"./itsa\";\n\nexport interface ItsaEqualSettings {\n  strict?:boolean;\n  example?:any;\n}\n\nexport class ItsaEqual {\n  equal(this:Itsa, val:any, settings:ItsaEqualSettings = {}):Itsa{\n    settings.example = val;\n    this.predicates.push({ id: 'equal', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaEqual, {\n  id: 'equal',\n  validate: (context:ItsaValidateContext, settings:ItsaEqualSettings) => {\n    const { val, result } = context;\n    const { example } = settings;\n    const strict = settings.strict ?? true;\n    const isEqual = strict ? (val === example) : (val == example);\n    if (!isEqual) {\n      result.registerError(`Did not equal ${example}`, val);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaEqual { }\n}\n\n","\nimport { Itsa } from \"./itsa\";\n\nexport class ItsaExtend {\n  extend(this:Itsa, extendor:(itsa:Itsa) => void):Itsa{\n    extendor(this);\n    return this;\n  }\n}\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaExtend { }\n}\n\nItsa.extend(ItsaExtend);\n","\nimport { Itsa, ItsaValidateContext} from \"./itsa\";\n\nexport class ItsaFalsy {\n  falsy(this:Itsa):Itsa{\n    this.predicates.push({ id: 'falsy', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaFalsy, {\n  id: 'falsy',\n  validate: (context:ItsaValidateContext) => {\n    const { val, result } = context;\n    if (val) return result.registerError(`Expected falsy value.`, val);\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaFalsy { }\n}\n\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\nimport {ItsaOrPrimative, primitiveToItsa} from \"./helpers\";\n\ninterface ItsaFunctionSettings {\n  length?:Itsa;\n}\n\ninterface ItsaFunctionIncomingSettings {\n  length?:ItsaOrPrimative;\n}\n\nexport class ItsaFunction {\n  function(this:Itsa, settings:ItsaFunctionIncomingSettings = {}):Itsa{\n    if (settings.length) settings.length = primitiveToItsa(settings.length);\n    this.predicates.push({ id: 'function', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaFunction, {\n  id: 'function',\n  validate: (context:ItsaValidateContext, settings:ItsaFunctionSettings) => {\n    const { val, type, result } = context;\n    if (type !== 'function') return result.registerError('Expected function', val);\n    if (settings.length) {\n      const subResult = settings.length._validate({\n        key: 'length',\n        parent: null,\n        val: val.length,\n        exists: true,\n        settings: context.validation,\n        path: context.path,\n      });\n      result.registerResult(subResult);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaFunction { }\n}\n\n","\nimport { Itsa, itsa } from \"./itsa\";\nimport { ItsaObjectSettings } from './object';\n\nexport class ItsaGet {\n  get(this:Itsa, key:string):Itsa{\n    const schema = itsa.any();\n    for (const p of this.predicates) {\n      if (p.id === 'object') {\n        const settings = p.settings as ItsaObjectSettings;\n        if (settings.example && settings.example[key]) {\n          const ex = settings.example[key];\n          schema.and(ex);\n        }\n      }\n    }\n    return schema;\n  }\n}\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaGet { }\n}\n\nItsa.extend(ItsaGet);\n","\nimport {itsa, Itsa} from \"./itsa\";\n\nexport declare type ItsaOrPrimative = Itsa | number | string | boolean | null | undefined | Function;\n\nexport function primitiveToItsa (val:ItsaOrPrimative):Itsa {\n  if (val instanceof Itsa) {\n    return val;\n  }else if (typeof val === 'function') {\n    return itsa.constructorIs(val);\n  }else {\n    return itsa.equal(val);\n  }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\ninterface ItsaInstanceOfSettings {\n  cls: any;\n}\n\nexport class ItsaInstanceOf {\n  instanceof(this: Itsa, cls:any):Itsa {\n    const settings:ItsaInstanceOfSettings = { cls };\n    this.predicates.push({ id: 'instanceof', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaInstanceOf, {\n  id: 'instanceof',\n  validate: (context: ItsaValidateContext, settings:ItsaInstanceOfSettings) => {\n    const {val, result} = context;\n    const isInstance = val instanceof settings.cls;\n    if (!isInstance) {\n      result.registerError(`Expected instance of ${settings.cls}`, val);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaInstanceOf { }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\nexport class ItsaInteger {\n  integer(this:Itsa):Itsa {\n    this.predicates.push({ id: 'integer', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaInteger, {\n  id: 'integer',\n  validate: (context: ItsaValidateContext) => {\n    const {val, result} = context;\n    const valid = typeof val === \"number\"\n      && isNaN(val) === false\n      && [Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY].indexOf(val) === -1\n      && val % 1 === 0;\n    if (!valid) {\n      result.registerError('Invalid integer', val);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaInteger { }\n}\n","import { ItsaDefaultSettings } from './default';\n\nexport interface ItsaInternalValidationSettings {\n  val:any;\n  key?:string|number;\n  path:(string|number)[];\n  parent?:object|[];\n  exists: boolean;\n  settings:ItsaValidationSettings;\n}\n\nexport interface ItsaValidationSettings {\n  partial?:boolean;\n  exhaustive?:boolean;\n  hint?:string;\n}\n\nexport interface ItsaError {\n  message:string;\n  key:string | number;\n  path:(string | number)[];\n}\n\nexport class ItsaValidationException extends Error {\n  message: string;\n  result: ItsaValidationResult;\n\n  constructor(result:ItsaValidationResult) {\n    super();\n    const path = result.errors[0].path.join('.');\n    this.message = `${path ? `${path}: ` : ''}${result.errors[0].message}`;\n    this.result = result;\n  }\n}\n\nexport class ItsaValidationResult {\n  ok: boolean = true;\n  errors: ItsaError[] = [];\n  value: any;\n  message?: string;\n\n  okOrThrow(){\n    if (!this.ok) throw new ItsaValidationException(this);\n  }\n\n  addError(error:ItsaError) {\n    this.ok = false;\n    this.message = error.message;\n    this.errors.push(error);\n  }\n\n  addResult(result: ItsaValidationResult) {\n    if (!result.ok) this.ok = false;\n    for (const e of result.errors) {\n      this.errors.push(e);\n    }\n    if (!this.message && this.errors.length) {\n      const err = this.errors[0];\n      this.message = err.message;\n      // if (err.path && err.path.length) {\n      //   this.message += ` (${(err.path||[]).join('.')})`;\n      // }\n    }\n  }\n}\n\nexport class ItsaValidationResultBuilder extends ItsaValidationResult {\n  ok = true;\n  errors = [];\n  value = undefined;\n  hint? = undefined;\n  message? = undefined;\n\n  private readonly exhaustive: boolean;\n  private readonly key: string | number;\n  private readonly path: (string | number)[];\n  private messageFormat?: string;\n\n  constructor(exhaustive: boolean, key: string | number, path: (string | number)[], hint?: string) {\n    super();\n    this.key = key;\n    this.exhaustive = exhaustive;\n    this.path = path;\n    this.hint = hint;\n  }\n\n  registerError (message:string, val: any) {\n    message = this.hint ? `${this.hint}: ${message}` : message;\n    const result = new ItsaValidationResult();\n    const pathStr = this.path?.join?.('.');\n    if (this.messageFormat) {\n      message = this.messageFormat\n        .replace('{message}', message)\n        .replace('{msg}', message)\n        .replace('{path}', pathStr);\n\n      const msgDataSegments = message.split('{data}');\n      if (msgDataSegments.length > 1) {\n        message = msgDataSegments.join(JSON.stringify(val));\n      }\n    }else{\n      if (pathStr) {\n        message = `${pathStr}: ${message}`;\n      }\n    }\n    result.addError({ message, key: this.key, path: this.path });\n    this.addResult(result);\n  }\n\n  registerResult(result: ItsaValidationResult):void{\n    this.addResult(result);\n    if (!this.exhaustive && this.errors.length) {\n      throw 'STOP_ON_FIRST_ERROR';\n    }\n  }\n\n  withMessageFormat(messageFormat?: string):this {\n    this.messageFormat = messageFormat;\n    return this;\n  }\n}\n\nexport interface ItsaValidateContext {\n  parent?:any;\n  key?:string | number;\n  path:(string | number)[];\n  exists: boolean;\n  val:any;\n  type: string;\n  setVal:(val:any) => void;\n  validation: ItsaValidationSettings;\n  result: ItsaValidationResultBuilder;\n}\n\nexport interface ItsaPredicate {\n  id:string;\n  settings?:any;\n}\n\nexport interface ItsaValidator {\n  id:string;\n  validate:(ItsaValidateContext, any) => void;\n  builder?:(settings) => any;\n}\n\ntype ItsaSubclass = new (...args: any[]) => any;\n\nexport class Itsa {\n  predicates:ItsaPredicate[] = [];\n  static validators:{[key:string]:ItsaValidator} = {};\n\n  static extend(cls:ItsaSubclass, ...validators: ItsaValidator[]) {\n    for (const validator of validators) {\n      Itsa.validators[validator.id] = validator;\n    }\n\n    const keys = Object.getOwnPropertyNames(cls.prototype).filter(m => m !== 'constructor');\n    for (const key of keys) {\n      const val = cls.prototype[key];\n      Itsa.prototype[key] = val;\n\n      /* istanbul ignore next */\n      if (typeof val === 'function') {\n        itsa[key] = (...args) => {\n          const it = new Itsa();\n          return it[key](...args);\n        };\n      }\n    }\n  }\n}\n\nexport const itsa:Itsa = { predicates: [] } as Itsa;\n\nexport type { ItsaOrPrimative, primitiveToItsa } from './helpers';\n\nimport './all';\nimport './and';\nimport './any';\nimport './anything';\nimport './array';\nimport './between';\nimport './boolean';\nimport './build';\nimport './clone';\nimport './constructor';\nimport './convert';\nimport './date';\nimport './default';\nimport './email';\nimport './equal';\nimport './extend';\nimport './falsy';\nimport './function';\nimport './instanceof';\nimport './integer';\nimport './keep';\nimport './length';\nimport './matches';\nimport './max';\nimport './message';\nimport './min';\nimport './not-empty';\nimport './null';\nimport './number';\nimport './object';\nimport './objectid';\nimport './optional';\nimport './partialed';\nimport './serialize';\nimport './string';\nimport './to';\nimport './touch';\nimport './truthy';\nimport './typeof';\nimport './unique';\nimport './validate';\nimport './verify';\nimport './get';\nimport './openapi';\n\nexport * from './decorators';\n","\nimport {Itsa} from \"./itsa\";\nimport { ItsaObjectSettings } from './object';\n\ninterface ItsaKeepConfig {\n  partial?: boolean;\n}\n\nconst keep = (schema:Itsa, fields:string[], config:ItsaKeepConfig):void => {\n  const parsedFields = fields.map(f => {\n    const [key, ...rest] = f.split('.');\n    return { key, rest};\n  });\n  for (const p of schema.predicates) {\n    if (p.id === 'object') {\n      const settings:ItsaObjectSettings = p.settings;\n      const keysToDelete = [];\n      for (const key of Object.keys(settings.example)) {\n        const exampleForKey:Itsa = settings.example[key];\n        const matchingFields = parsedFields.filter(pf => pf.key === key);\n        if (matchingFields.length) {\n          for (const field of matchingFields) {\n            if (field.rest.length) {\n              keep(exampleForKey, field.rest, config);\n            }else{\n              // nothing to do\n            }\n          }\n        }else if (config.partial){\n          for (const [i, pred] of exampleForKey.predicates.entries()) {\n            if (pred.id === 'optional') continue;\n            const allowedSchema = new Itsa();\n            allowedSchema.predicates = [pred];\n            exampleForKey.predicates[i] = { id: 'optional', settings: { allowedSchema } };\n          }\n        }else{\n          keysToDelete.push(key);\n        }\n      }\n      for (const key of keysToDelete) {\n        delete settings.example[key];\n      }\n    }\n  }\n};\n\nexport class ItsaKeep {\n  keep(this:Itsa, fields:string[], config:ItsaKeepConfig = {}):Itsa{\n    if (!fields) throw new Error('fields parameter is required');\n    const schema = this.clone();\n    keep(schema, fields, config);\n    return schema as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaKeep);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaKeep { }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\ninterface ItsaLengthSettings {\n  exactly?:number;\n  min?:number;\n  max?:number;\n}\n\nexport class ItsaLength {\n  length(this: Itsa, min?:number, max?:number):Itsa {\n    let settings:ItsaLengthSettings = {\n      min, max\n    };\n    if (typeof min === 'number' && typeof max !== 'number') {\n      settings = { exactly: min };\n    }\n    if (typeof min !== 'number') {\n      settings = { min: 1 };\n    }\n    this.predicates.push({ id: 'length', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaLength, {\n  id: 'length',\n  validate: (context: ItsaValidateContext, settings:ItsaLengthSettings) => {\n    const {val, result} = context;\n    const len = val ? val.length : null;\n    if (typeof len !== 'number') {\n      return result.registerError('Invalid length', val);\n    }\n    if (typeof settings.exactly === 'number' && settings.exactly !== len) {\n      return result.registerError(`Expected length to be ${settings.exactly}`, val);\n    }\n    if (typeof settings.min === 'number' && settings.min > len) {\n      return result.registerError(`Expected length to be at least ${settings.min}`, val);\n    }\n    if (typeof settings.max === 'number' && settings.max < len) {\n      return result.registerError(`Expected length to be at most ${settings.max}`, val);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaLength { }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\ninterface ItsaMatchesSettings {\n  regex:RegExp;\n}\n\nexport class ItsaMatches {\n  matches(this: Itsa, regex:RegExp):Itsa {\n    const settings:ItsaMatchesSettings = { regex };\n    this.predicates.push({ id: 'matches', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaMatches, {\n  id: 'matches',\n  validate: (context: ItsaValidateContext, settings: ItsaMatchesSettings) => {\n    const {val, result} = context;\n    const valid = settings.regex.test(String(val));\n    if (!valid) {\n      result.registerError(`Does not match ${settings.regex}`, val);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaMatches { }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\ninterface ItsaMaxSettings {\n  max:any;\n  inclusive:boolean;\n}\n\nexport class ItsaMax {\n  max(this:Itsa, max:any, inclusive?:boolean):Itsa {\n    inclusive = inclusive ?? true;\n    const settings:ItsaMaxSettings = { max, inclusive };\n    this.predicates.push({ id: 'max', settings });\n    return this as any as Itsa;\n  }\n  under(this:Itsa, max:any, inclusive?:boolean):Itsa {\n    inclusive = inclusive ?? false;\n    const settings:ItsaMaxSettings = { max, inclusive };\n    this.predicates.push({ id: 'max', settings });\n    return this as any as Itsa;\n  }\n  below(this:Itsa, max:any, inclusive?:boolean):Itsa {\n    inclusive = inclusive ?? false;\n    const settings:ItsaMaxSettings = { max, inclusive };\n    this.predicates.push({ id: 'max', settings });\n    return this as any as Itsa;\n  }\n  atMost(this:Itsa, max:any, inclusive?:boolean):Itsa {\n    inclusive = inclusive ?? true;\n    const settings:ItsaMaxSettings = { max, inclusive };\n    this.predicates.push({ id: 'max', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaMax, {\n  id: 'max',\n  validate: (context: ItsaValidateContext, settings: ItsaMaxSettings) => {\n    const { val, result } = context;\n    const { max, inclusive } = settings;\n    if (inclusive) {\n      const ok = val <= max;\n      if (!ok) result.registerError(`Value must be at most ${max}`, val);\n    } else {\n      const ok = val < max;\n      if (!ok) result.registerError(`Value must be less than ${max}`, val);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaMax { }\n}\n","import {Itsa} from \"./itsa\";\n\nItsa.prototype.message = Itsa.prototype.msg = function (this: Itsa, message: string):Itsa {\n  const predicate = this.predicates[this.predicates.length - 1];\n  predicate.settings = predicate.settings || {};\n  predicate.settings._message = message;\n  return this;\n};\n\ndeclare module './itsa' {\n  interface Itsa {\n    message(message:string):this;\n    msg(message:string):this;\n  }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\ninterface ItsaMinSettings {\n  min:any;\n  inclusive:boolean;\n}\n\nexport class ItsaMin {\n  min(this: Itsa, min:any, inclusive?:boolean):Itsa {\n    inclusive = inclusive ?? true;\n    const settings:ItsaMinSettings = { min, inclusive };\n    this.predicates.push({ id: 'min', settings });\n    return this as any as Itsa;\n  }\n  over(this: Itsa, min:any, inclusive?:boolean):Itsa {\n    inclusive = inclusive ?? false;\n    const settings:ItsaMinSettings = { min, inclusive };\n    this.predicates.push({ id: 'min', settings });\n    return this as any as Itsa;\n  }\n  above(this: Itsa, min:any, inclusive?:boolean):Itsa {\n    inclusive = inclusive ?? false;\n    const settings:ItsaMinSettings = { min, inclusive };\n    this.predicates.push({ id: 'min', settings });\n    return this as any as Itsa;\n  }\n  atLeast(this: Itsa, min:any, inclusive?:boolean):Itsa {\n    inclusive = inclusive ?? true;\n    const settings:ItsaMinSettings = { min, inclusive };\n    this.predicates.push({ id: 'min', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaMin, {\n  id: 'min',\n  validate: (context: ItsaValidateContext, settings: ItsaMinSettings) => {\n    const { val, result } = context;\n    const { min, inclusive } = settings;\n    if (inclusive) {\n      const ok = val >= min;\n      if (!ok) result.registerError(`Value must be at least ${min}`, val);\n    } else {\n      const ok = val > min;\n      if (!ok) result.registerError(`Value must be greater than ${min}`, val);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaMin { }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\nexport class ItsaNotEmpty {\n  notEmpty(this:Itsa):Itsa {\n    this.predicates.push({ id: 'notEmpty', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaNotEmpty, {\n  id: 'notEmpty',\n  validate: (context: ItsaValidateContext) => {\n    const { val, result } = context;\n    const len = val ? val.length : null;\n    if (typeof len === 'number' && len) {\n      return;\n    }\n\n    if (Object.prototype.toString.call(val) === \"[object Object]\") {\n      let hasFields = false;\n      for (const key in val) {\n        if (!val.hasOwnProperty(key)) { continue; }\n        hasFields = true;\n        break;\n      }\n      if (!hasFields) {\n        result.registerError(`Object cannot be empty`, val);\n      }\n      return;\n    }\n\n    result.registerError(`Value cannot be empty`, val);\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaNotEmpty { }\n}\n","import {Itsa} from \"./itsa\";\nimport {ItsaEqualSettings} from \"./equal\";\n\nexport class ItsaNull {\n  null(this:Itsa):Itsa {\n    const settings:ItsaEqualSettings = { example: null, strict: true };\n    this.predicates.push({ id: 'equal', settings });\n    return this as any as Itsa;\n  }\n  undef(this:Itsa):Itsa {\n    const settings:ItsaEqualSettings = { example: undefined, strict: true };\n    this.predicates.push({ id: 'equal', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaNull);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaNull { }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\nexport class ItsaNumber {\n  number(this:Itsa):Itsa {\n    this.predicates.push({ id: 'number' });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaNumber, {\n  id: 'number',\n  validate: (context: ItsaValidateContext) => {\n    const {val, type, result} = context;\n    if (type !== 'number') return result.registerError(`Expected number but type is ${type}.`, val);\n    if (isNaN(val)) return result.registerError(`Expected number but found NaN.`, val);\n    if (!isFinite(val)) return result.registerError(`Expected number but found infinity.`, val);\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaNumber { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\nimport {ItsaOrPrimative, primitiveToItsa} from \"./helpers\";\n\ninterface ItsaObjectExample {\n  [key: string]:Itsa;\n}\n\ninterface ItsaObjectExampleWithPrimitives {\n  [key: string]:ItsaOrPrimative;\n}\n\ninterface ItsaObjectConfig {\n  extras?: boolean;\n  key?: Itsa;\n  value?: Itsa;\n  partial?: boolean;\n}\n\nexport interface ItsaObjectSettings {\n  example?: ItsaObjectExample;\n  config: ItsaObjectConfig;\n}\n\nexport class ItsaObject {\n  object(this:Itsa, example?:ItsaObjectExampleWithPrimitives, config:ItsaObjectConfig = {}):Itsa{\n    let convertedExample = null;\n    if (example) {\n      convertedExample = {};\n      for (const key in example) {\n        convertedExample[key] = primitiveToItsa(example[key]);\n      }\n    }\n    if (config.key) {\n      config.key = primitiveToItsa(config.key);\n    }\n    if (config.value) {\n      config.value = primitiveToItsa(config.value);\n    }\n    const settings:ItsaObjectSettings = { example:convertedExample as ItsaObjectExample, config };\n    this.predicates.push({ id: 'object', settings });\n    return this as any as Itsa;\n  }\n  addProperty(this:Itsa, key:string, schema:ItsaOrPrimative):Itsa {\n    for (let i = this.predicates.length - 1; i >= 0; i--) {\n      const pred = this.predicates[i];\n      if (pred.id !== 'object') continue;\n      if (!pred.settings) pred.settings = {};\n      if (!pred.settings.example) pred.settings.example = {};\n      if (!pred.settings.config) pred.settings.config = {};\n      pred.settings.example[key] = primitiveToItsa(schema);\n      break;\n    }\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaObject, {\n  id: 'object',\n  builder(settings: ItsaObjectSettings) {\n    const obj = {};\n    const example = settings.example as any;\n    if (example) {\n      const keys = Object.keys(example);\n      for (const key of keys) {\n        const schemaForKey = example[key];\n        obj[key] = schemaForKey.build();\n      }\n    }\n    return obj;\n  },\n  validate: (context:ItsaValidateContext, settings:ItsaObjectSettings) => {\n    const { val, parent, validation, result, type } = context;\n    const { example, config } = settings;\n    const extras = config.extras ?? false;\n\n    // Validate object\n    if (!val) return result.registerError(`Expected object but value is ${val}.`, val);\n    if (type !== \"object\") return result.registerError(`Expected object but type is ${type}.`, val);\n    if (val instanceof RegExp) return result.registerError(`Expected object but type is regex.`, val);\n    if (val instanceof Date) return result.registerError(`Expected object but type is date.`, val);\n    if (Array.isArray(val)) return result.registerError(`Expected object but type is array.`, val);\n\n    const objectKeys = Object.keys(val);\n\n    if (example) {\n      // Validate according to example\n      const exampleKeys = Object.keys(example);\n      for (const key of exampleKeys) {\n        // For root object, we might skip missing fields\n        const v = val[key];\n        const isMissing = v === undefined;\n        const isPartial = validation.partial || config.partial;\n        if (isPartial && isMissing) {\n          continue;\n        }\n\n        const subSchema = example[key];\n        const subResult = subSchema._validate({\n          key,\n          parent:val,\n          val: val[key],\n          exists: key in val,\n          settings: validation,\n          path: [...context.path, key],\n        });\n        result.registerResult(subResult);\n      }\n\n      // Error for extra properties?\n      if (!extras) {\n        const extraKeys = objectKeys.filter(k => !exampleKeys.includes(k));\n        if (extraKeys.length) {\n          result.registerError(`Extra unknown properties: ${extraKeys.join(', ')}`, val);\n        }\n      }\n    }\n\n    if (config.key) {\n      for (const key of objectKeys) {\n        const subResult = config.key._validate({\n          key,\n          parent: val,\n          val: key,\n          exists: true,\n          settings: validation,\n          path: [...context.path, key],\n        });\n        result.registerResult(subResult);\n      }\n    }\n\n    if (config.value) {\n      for (const key of objectKeys) {\n        const subVal = val[key];\n        const subResult = config.value._validate({\n          key,\n          parent: val,\n          val: subVal,\n          exists: true,\n          settings: validation,\n          path: [...context.path, key],\n        });\n        result.registerResult(subResult);\n      }\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaObject { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\n\nconst rxObjectId = /^[0-9a-f]{24}$/i;\n\nexport class ItsaObjectId {\n  objectid(this:Itsa):Itsa{\n    this.predicates.push({ id: 'objectid', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaObjectId, {\n  id: 'objectid',\n  validate: (context:ItsaValidateContext, settings?:any) => {\n    const { val, result, type } = context;\n    if (!val) return result.registerError('ObjectId is required', val);\n    if (type !== 'string') return result.registerError('ObjectId must be a string', val);\n    if (val.length !== 24) return result.registerError('ObjectId must have 24 characters', val);\n    if (!rxObjectId.test(val)) return result.registerError('ObjectId may only contain 0-9, a-z', val);\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaObjectId { }\n}\n","\nimport {Itsa, ItsaPredicate} from './itsa';\n\nfunction getOpenApiTypeForValue(val: any) {\n  if (typeof val === 'string') return 'string';\n  if (typeof val === 'number') return (val % 1 === 0) ? 'integer' : 'number';\n  if (typeof val === 'boolean') return 'boolean';\n  if (val === null || val === undefined) return 'null'; // Note: OpenAPI 3.1 supports 'null', but 3.0 does not.\n  if (Array.isArray(val)) return 'array';\n  if (typeof val === 'object') return 'object';\n}\n\nexport interface ItsaSchemaSettings {\n  description?: string;\n  example?: any;\n  default?: any;\n  title?: any;\n  _defaults?: Omit<ItsaSchemaSettings, '_defaults'>;\n}\n\nclass ItsaOpenApiSchema {\n\n  schema(this: Itsa, settings: ItsaSchemaSettings): Itsa {\n    this.predicates.push({ id: 'schema', settings });\n    return this;\n  }\n\n  toOpenApiSchema<X>(this:Itsa):any {\n    // unwarp optional\n    const predicates = this.predicates.flatMap(p => {\n      if (p.id === 'optional') return p.settings?.allowedSchema?.predicates || [];\n      return p;\n    });\n\n    const lookup = {} as Record<string, ItsaPredicate>;\n    for (const p of predicates) { lookup[p.id] = p; }\n\n    const schema:any = (() => {\n      if (lookup['object']) {\n        const properties = {} as any;\n        const required = [];\n        for (const key of this.keys()) {\n          const keySchema = this.get(key);\n          if (keySchema.isRequired()) required.push(key);\n          properties[key] = keySchema.toOpenApiSchema();\n        }\n        return {\n          type: 'object',\n          required,\n          properties,\n        };\n      }\n\n      if (lookup['array']) {\n        const example = lookup['array'].settings?.example;\n        return {\n          type: 'array',\n          ...(example ? { items: example.toOpenApiSchema() } : {}),\n        };\n      }\n\n      if (lookup['string'] || lookup['email']) {\n        const s = { type: 'string' } as any;\n        if (lookup['email']) s.format = 'email';\n        if (lookup['matches']) {\n          const rx = lookup['matches'].settings?.regex;\n          const match = rx.toString().match(/^\\/(.*?)\\/([gimyus]*)$/);\n          if (match) { s.pattern = match[1]; }\n        }\n        return s;\n      }\n\n      if (lookup['number']) {\n        return { type: 'number' };\n      }\n\n      if (lookup['integer']) {\n        return { type: 'integer' };\n      }\n\n      if (lookup['boolean']) {\n        return { type: 'boolean' };\n      }\n\n      if (lookup['null']) {\n        return { type: 'null' };\n      }\n\n      if (lookup['objectid']) {\n        return { type: 'string', minLength: 24, maxLength: 24, pattern: '^[0-9a-f]$' };\n      }\n\n      if (lookup['date']) {\n        return { type: 'date', format: 'date-time' };\n      }\n\n      if (lookup['equal']) {\n        const val = lookup['equal'].settings.example;\n        const type = getOpenApiTypeForValue(val);\n        return { type, const: val };\n      }\n\n      if (lookup['any']) {\n        const anyPredicateSchemas:Itsa[] = lookup['any']?.settings?.schemas || [];\n        if (anyPredicateSchemas.length === 1) {\n          return anyPredicateSchemas[0].toOpenApiSchema();\n        }else if (anyPredicateSchemas.length > 1) {\n          const subSchemas = anyPredicateSchemas.map(s => s.toOpenApiSchema());\n          const type = subSchemas[0].type;\n          const allSame = !subSchemas.find(ss => ss.type !== type);\n          const allConst = !subSchemas.find(ss => !('const' in ss));\n          const isEnum = allSame && allConst && ['string', 'number', 'integer'].includes(type);\n          if (isEnum) {\n            return { type, enum: subSchemas.map(ss => ss.const) };\n          }else{\n            return { oneOf: anyPredicateSchemas.map(s => s.toOpenApiSchema()) };\n          }\n        }\n      }\n\n      if (lookup['anything']) {\n        return null;\n      }\n    })();\n\n    if (!schema) return schema;\n\n    // Now apply modifiers\n    if (lookup['notEmpty']) schema.minLength = 1;\n    if (lookup['length']) {\n      const { exactly, min, max } = (lookup['length']?.settings || {});\n      if (typeof min === \"number\") {\n        schema.minLength = min;\n      }\n      if (typeof max === \"number\") {\n        schema.maxLength = max;\n      }\n      if (typeof exactly === \"number\") {\n        schema.minLength = exactly;\n        schema.maxLength = exactly;\n      }\n    }\n\n    if (lookup['between']) {\n      const { min, max } = lookup['between'].settings;\n      const inclusive = lookup['between'].settings.inclusive ?? true;\n      if (inclusive) {\n        schema.minimum = min;\n        schema.maximum = max;\n      }else{\n        schema.exclusiveMinimum = min;\n        schema.exclusiveMaximum = max;\n      }\n    }\n    if (lookup['min']) {\n      const min = lookup['min'].settings.min;\n      const inclusive = lookup['min'].settings.inclusive ?? true;\n      if (inclusive) {\n        schema.minimum = min;\n      }else{\n        schema.exclusiveMinimum = min;\n      }\n    }\n    if (lookup['max']) {\n      const max = lookup['max'].settings.max;\n      const inclusive = lookup['max'].settings.inclusive ?? true;\n      if (inclusive) {\n        schema.maximum = max;\n      }else{\n        schema.exclusiveMaximum = max;\n      }\n    }\n    if (lookup['equal']) {\n      schema.const = lookup['equal'].settings.example;\n    }\n\n    // Now apply meta\n    for (const p of predicates) {\n      if (p.id !== 'schema') continue;\n      if (!p.settings) continue;\n      for (const key of Object.keys(p.settings)) {\n        if (key === '_defaults') continue;\n        schema[key] = p.settings[key];\n      }\n      if (!p.settings._defaults) continue;\n      for (const key of Object.keys(p.settings._defaults)) {\n        if (key === '_defaults') continue;\n        const hasValue = ![null, undefined].includes(schema[key]);\n        if (hasValue) continue;\n        schema[key] = p.settings._defaults[key];\n      }\n    }\n\n    return schema;\n  }\n}\n\nItsa.extend(ItsaOpenApiSchema);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaOpenApiSchema { }\n}\n","\nimport { Itsa, ItsaOrPrimative, ItsaValidateContext } from \"./itsa\";\nimport { primitiveToItsa} from \"./helpers\";\n\ninterface ItsaOptionalSettings {\n  allowedSchema:Itsa;\n}\n\nexport class ItsaOptional {\n  isRequired(this: Itsa): boolean {\n    return !this.predicates.find(p => p.id === 'optional');\n  }\n  optional(this:Itsa, allowedSchema:ItsaOrPrimative):Itsa{\n    const settings:ItsaOptionalSettings = { allowedSchema: primitiveToItsa(allowedSchema) };\n    this.predicates.push({ id: 'optional', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaOptional, {\n  id: 'optional',\n  validate: (context:ItsaValidateContext, settings:ItsaOptionalSettings) => {\n    const { key, parent, exists, validation, path, val, result } = context;\n    if (val === null) return;\n    if (val === undefined) return;\n\n    const allowedTypes = [];\n    for (const p of settings.allowedSchema.predicates) {\n      if (p.id === 'string') allowedTypes.push('string');\n      if (p.id === 'number') allowedTypes.push('number');\n      if (p.id === 'integer') allowedTypes.push('number');\n    }\n    if (!val && allowedTypes.includes(typeof val)) {\n      return;\n    }\n\n    const subResult = settings.allowedSchema._validate({\n      key,\n      parent,\n      val,\n      exists,\n      path,\n      settings: validation,\n    });\n    if (!subResult.ok) {\n      return result.addResult(subResult);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaOptional { }\n}\n","\nimport {Itsa} from \"./itsa\";\nimport { ItsaObjectSettings } from './object';\n\nconst forEachValue = (obj, handler) => {\n  Object.keys(obj).forEach(key => {\n    const val = obj[key];\n    handler(val);\n    if (val && typeof val === 'object') {\n      forEachValue(val, handler);\n    }\n  })\n};\n\nconst partialize = (schema:Itsa, fields?:string[]):void => {\n  for (const p of schema.predicates) {\n    if (p.id === 'object') {\n      const settings:ItsaObjectSettings = p.settings;\n      if (fields) {\n        for (const field of fields) {\n          const [key, ...restOfKeys] = field.split('.');\n          const ex:Itsa = settings.example[key];\n          if (!ex) {\n            continue;\n          }else if (restOfKeys.length) {\n            partialize(ex, [restOfKeys.join('.')]);\n          }else{\n            for (const [i, pred] of ex.predicates?.entries()) {\n              if (pred.id === 'optional') continue;\n              const allowedSchema = new Itsa();\n              allowedSchema.predicates = [pred];\n              ex.predicates[i] = { id: 'optional', settings: { allowedSchema } };\n            }\n          }\n        }\n      }else{\n        settings.config.partial = true;\n      }\n    }\n\n    if (!fields){\n      forEachValue(p, (val) => {\n        if (val instanceof Itsa) {\n          partialize(val);\n        }\n      });\n    }\n  }\n};\n\nexport class ItsaPartialed {\n  partialed(this:Itsa, fields?:string[]):Itsa{\n    const schema = this.clone();\n    partialize(schema, fields);\n    return schema as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaPartialed);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaPartialed { }\n}\n","\nimport {Itsa, ItsaPredicate} from \"./itsa\";\n\nexport type RawItsa = {predicates:ItsaPredicate[]};\n\nconst convert = (el:any) => {\n  const proto = Object.prototype.toString.call(el);\n  const isObject = `[object Object]` === proto;\n  const isArray = `[object Array]` === proto;\n  if (!isObject && !isArray) {\n    return el;\n  }\n\n  // replace sub-schemas: depth first\n  for (const key in el) {\n    el[key] = convert(el[key]);\n  }\n\n  if (isObject && el.predicates) {\n    const i = new Itsa();\n    i.predicates = el.predicates;\n    return i;\n  }\n\n  return el;\n}\n\nexport class ItsaSerialize {\n  load(this:Itsa, raw:RawItsa):Itsa{\n    this.predicates = convert(raw).predicates;\n    return this as any as Itsa;\n  }\n  toJSON(this:Itsa):RawItsa {\n    return { predicates: this.predicates };\n  }\n  toRaw(this:Itsa):RawItsa {\n    return this.toJSON();\n  }\n}\n\nItsa.extend(ItsaSerialize);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaSerialize { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\n\nexport class ItsaString {\n  string(this:Itsa):Itsa{\n    this.predicates.push({ id: 'string', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaString, {\n  id: 'string',\n  validate: (context:ItsaValidateContext) => {\n    const { type, result, val } = context;\n    if (type !== 'string') return result.registerError(`Expected string`, val);\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaString { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\n\ninterface ItsaToIntSettings {\n  radix?:number;\n}\n\nexport class ItsaTo {\n  toDate(this:Itsa):Itsa{\n    this.predicates.push({ id: 'toDate', settings:null });\n    return this as any as Itsa;\n  }\n  toFloat(this:Itsa):Itsa{\n    this.predicates.push({ id: 'toFloat', settings:null });\n    return this as any as Itsa;\n  }\n  toInt(this:Itsa, radix?:number):Itsa{\n    const settings:ItsaToIntSettings = { radix };\n    this.predicates.push({ id: 'toInt', settings });\n    return this as any as Itsa;\n  }\n  toLowerCase(this:Itsa):Itsa{\n    this.predicates.push({ id: 'toLowerCase' });\n    return this as any as Itsa;\n  }\n  toUpperCase(this:Itsa):Itsa{\n    this.predicates.push({ id: 'toUpperCase' });\n    return this as any as Itsa;\n  }\n  toNow(this:Itsa):Itsa{\n    this.predicates.push({ id: 'toNow' });\n    return this as any as Itsa;\n  }\n  toString(this:Itsa):Itsa{\n    this.predicates.push({ id: 'toString' });\n    return this as any as Itsa;\n  }\n  toTrimmed(this:Itsa):Itsa{\n    this.predicates.push({ id: 'toTrimmed' });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(\n  ItsaTo,\n  {\n    id: 'toDate',\n    validate: (context:ItsaValidateContext) => {\n      const { val, setVal, result } = context;\n      const date = new Date(val);\n      if (!isFinite(date.getTime())) return result.registerError(`Date conversion failed`, val);\n      setVal(date);\n    }\n  },\n  {\n    id: 'toFloat',\n    validate: (context:ItsaValidateContext) => {\n      const { val, setVal, result } = context;\n      const newFloat = parseFloat(val);\n      if (isNaN(newFloat)) return result.registerError(`Float conversion failed`, val);\n      setVal(newFloat);\n    }\n  },\n  {\n    id: 'toInt',\n    validate: (context:ItsaValidateContext, settings:ItsaToIntSettings) => {\n      const { val, setVal, result } = context;\n      const { radix } = settings;\n      const newInt = parseInt(val, radix ?? 10);\n      if (isNaN(newInt)) return result.registerError(`Int conversion failed`, val);\n      setVal(newInt);\n    }\n  },\n  {\n    id: 'toLowerCase',\n    validate: (context:ItsaValidateContext) => {\n      const { val, setVal } = context;\n      setVal(String(val).toLowerCase());\n    }\n  },\n  {\n    id: 'toUpperCase',\n    validate: (context:ItsaValidateContext) => {\n      const { val, setVal } = context;\n      setVal(String(val).toUpperCase());\n    }\n  },\n  {\n    id: 'toNow',\n    validate: (context:ItsaValidateContext) => {\n      const { setVal } = context;\n      setVal(new Date());\n    }\n  },\n  {\n    id: 'toString',\n    validate: (context:ItsaValidateContext) => {\n      const { val, setVal } = context;\n      setVal(String(val));\n    }\n  },\n  {\n    id: 'toTrimmed',\n    validate: (context:ItsaValidateContext) => {\n      const { val, setVal } = context;\n      setVal(String(val).trim());\n    }\n  },\n);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaTo { }\n}\n","\nimport { Itsa } from './itsa';\nimport { ItsaObjectSettings } from './object';\n\nclass ItsaTouch {\n  touch<X>(this:Itsa, obj:X, toucher?:(string, X) => void):X {\n    const objectPredicates = this.predicates\n      .flatMap(p => p.id === 'optional' ? p.settings?.allowedSchema?.predicates : p)\n      .filter(p => p?.id === 'object');\n    if (!objectPredicates.length) throw new Error(`This is not an object schema.`);\n    if (!obj) return obj;\n    for (const predicate of objectPredicates) {\n      const settings = predicate.settings as ItsaObjectSettings;\n      const example = settings.example as any;\n      if (!example) return obj;\n      const keys = Object.keys(example);\n      for (const key of keys) {\n        if (!(key in obj)) {\n          if (toucher) {\n            toucher(key, obj);\n          }else{\n            obj[key] = undefined;\n          }\n        }\n      }\n    }\n    return obj;\n  }\n\n  keys(this:Itsa):string[] {\n    const touched = this.touch({});\n    return Object.keys(touched);\n  }\n\n  pick<TObj>(this:Itsa, source:TObj):Partial<TObj> {\n    const obj = {};\n    for (const k of this.keys()) {\n      if (k in source) {\n        obj[k] = source[k];\n      }\n    }\n    return obj;\n  }\n}\n\nItsa.extend(ItsaTouch);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaTouch { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\n\nexport class ItsaTruthy {\n  truthy(this:Itsa):Itsa{\n    this.predicates.push({ id: 'truthy', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaTruthy, {\n  id: 'truthy',\n  validate: (context:ItsaValidateContext) => {\n    const { val, result } = context;\n    if (!val) return result.registerError(`Expected truthy value.`, val);\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaTruthy { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\n\ninterface ItsaTypeOfSettings {\n  type: string;\n}\n\nexport class ItsaTypeOf {\n  typeof(this:Itsa, type:string):Itsa{\n    const settings: ItsaTypeOfSettings = { type };\n    this.predicates.push({ id: 'typeof', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaTypeOf, {\n  id: 'typeof',\n  validate: (context:ItsaValidateContext, settings: ItsaTypeOfSettings) => {\n    const { val, result } = context;\n    const { type } = settings;\n    const actualType = typeof val;\n    if (type !== actualType) {\n      result.registerError(`Expected ${type}`, val);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaTypeOf { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\n\ninterface ItsaUniqueSettings {\n  getter?: Function;\n}\n\nexport class ItsaUnique {\n  unique(this:Itsa, getter?:Function):Itsa{\n    const settings: ItsaUniqueSettings = { getter };\n    this.predicates.push({ id: 'unique', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaUnique, {\n  id: 'unique',\n  validate: (context:ItsaValidateContext, settings: ItsaUniqueSettings) => {\n    const { val, result } = context;\n    const { getter } = settings;\n    const set = new Set();\n    for (const key in val) {\n      let subVal = val[key];\n      if (getter) subVal = getter(subVal);\n      if (set.has(subVal)) {\n        return result.registerError(`${subVal} occurred multiple times`, val);\n      }\n      set.add(subVal);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaUnique { }\n}\n","\nimport {\n  Itsa,\n  ItsaValidator,\n  ItsaValidateContext,\n  ItsaInternalValidationSettings,\n  ItsaValidationResult,\n  ItsaValidationSettings,\n  ItsaValidationResultBuilder\n} from './itsa';\n\nclass ItsaValidation {\n  _validate(this:Itsa, settings:ItsaInternalValidationSettings):ItsaValidationResultBuilder {\n    const { key } = settings;\n    const result = new ItsaValidationResultBuilder(settings.settings.exhaustive, key, settings.path, settings.settings.hint);\n    result.value = settings.val;\n    try {\n      const setVal = (newVal:any) => {\n        if (settings.parent) {\n          settings.parent[settings.key] = newVal;\n          settings.val = newVal;\n        }else{\n          result.value = newVal;\n        }\n      };\n      for (const predicate of this.predicates) {\n        const validator:ItsaValidator = Itsa.validators[predicate.id];\n\n        /* istanbul ignore next */\n        if (!validator) throw new Error(`Validator not found: ${predicate.id}`);\n\n        const context:ItsaValidateContext = {\n          setVal,\n          result: result.withMessageFormat(predicate.settings?._message),\n          val: settings.val,\n          key: settings.key,\n          parent: settings.parent,\n          exists: settings.exists,\n          type: typeof settings.val,\n          validation: settings.settings,\n          path: settings.path,\n        };\n        validator.validate(context, predicate.settings);\n        if (!result.ok) return result;\n      }\n    }catch (e){\n      /* istanbul ignore next */\n      if (e !== 'STOP_ON_FIRST_ERROR') throw e;\n    }\n    return result;\n  }\n\n  validate(this:Itsa, val: any, settings:ItsaValidationSettings = {}):ItsaValidationResult {\n    return this._validate({\n      val,\n      settings,\n      key:null,\n      parent:null,\n      exists: true,\n      path: [],\n    });\n  }\n\n  validOrThrow(this:Itsa, val:any, settings?:ItsaValidationSettings) {\n    this.validate(val, settings).okOrThrow();\n  }\n}\n\nItsa.extend(ItsaValidation);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaValidation { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\n\nexport declare type ItsaVerifyFunction = (val:any, context:ItsaValidateContext) => boolean | string | any;\n\ninterface ItsaVerifySettings {\n  verifier: ItsaVerifyFunction;\n}\n\nexport class ItsaVerify {\n  verify(this:Itsa, verifier:ItsaVerifyFunction):Itsa{\n    const settings: ItsaVerifySettings = { verifier };\n    this.predicates.push({ id: 'verify', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaVerify, {\n  id: 'verify',\n  validate: (context:ItsaValidateContext, settings: ItsaVerifySettings) => {\n    const { val, result } = context;\n    const { verifier } = settings;\n    try {\n      const response = verifier(val, context);\n      if (typeof response === 'boolean') {\n        if (response === false) {\n          result.registerError(`Value is invalid`, val);\n        }\n        return;\n      }\n      if (typeof response === 'string') {\n        return result.registerError(response, val);\n      }\n    }catch(e){\n      if (e === 'STOP_ON_FIRST_ERROR') throw e;\n      return result.registerError(e, val);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaVerify { }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(589);\n"],"sourceRoot":""}