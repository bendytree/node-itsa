{"version":3,"sources":["webpack://ItsaLib/webpack/universalModuleDefinition","webpack://ItsaLib/./src/any.ts","webpack://ItsaLib/./src/anything.ts","webpack://ItsaLib/./src/array.ts","webpack://ItsaLib/./src/between.ts","webpack://ItsaLib/./src/boolean.ts","webpack://ItsaLib/./src/clone.ts","webpack://ItsaLib/./src/constructor.ts","webpack://ItsaLib/./src/convert.ts","webpack://ItsaLib/./src/date.ts","webpack://ItsaLib/./src/default.ts","webpack://ItsaLib/./src/email.ts","webpack://ItsaLib/./src/equal.ts","webpack://ItsaLib/./src/falsy.ts","webpack://ItsaLib/./src/function.ts","webpack://ItsaLib/./src/helpers.ts","webpack://ItsaLib/./src/instanceof.ts","webpack://ItsaLib/./src/integer.ts","webpack://ItsaLib/./src/itsa.ts","webpack://ItsaLib/./src/length.ts","webpack://ItsaLib/./src/matches.ts","webpack://ItsaLib/./src/max.ts","webpack://ItsaLib/./src/min.ts","webpack://ItsaLib/./src/not-empty.ts","webpack://ItsaLib/./src/null.ts","webpack://ItsaLib/./src/number.ts","webpack://ItsaLib/./src/object.ts","webpack://ItsaLib/./src/objectid.ts","webpack://ItsaLib/./src/serialize.ts","webpack://ItsaLib/./src/string.ts","webpack://ItsaLib/./src/to.ts","webpack://ItsaLib/./src/touch.ts","webpack://ItsaLib/./src/truthy.ts","webpack://ItsaLib/./src/typeof.ts","webpack://ItsaLib/./src/unique.ts","webpack://ItsaLib/./src/validate.ts","webpack://ItsaLib/./src/verify.ts","webpack://ItsaLib/webpack/bootstrap","webpack://ItsaLib/webpack/startup"],"names":["root","factory","exports","module","define","amd","this","ItsaAny","options","schemas","flat","map","x","primitiveToItsa","settings","predicates","push","id","validate","context","key","val","parent","validation","exists","result","length","_validate","path","ok","registerError","Itsa","extend","ItsaAnything","ItsaArray","example","type","Array","isArray","subVal","subResult","registerResult","ItsaBetween","min","max","extraSettings","inclusive","ItsaBoolean","ItsaClone","raw","JSON","parse","stringify","itsa","load","ItsaConstructor","cls","constructor","ItsaConvert","converter","setVal","e","ItsaDate","Object","prototype","toString","call","isFinite","ItsaDefault","falsy","Date","rx","ItsaEmail","test","ItsaEqual","strict","ItsaFalsy","ItsaFunction","constructorIs","equal","ItsaInstanceOf","ItsaInteger","isNaN","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","indexOf","ItsaValidationException","errors","join","message","Error","ItsaValidationResult","error","ItsaValidationResultBuilder","exhaustive","value","undefined","addError","addResult","validators","validator","keys","getOwnPropertyNames","filter","m","it","ItsaLength","exactly","len","ItsaMatches","regex","String","ItsaMax","ItsaMin","ItsaNotEmpty","hasFields","hasOwnProperty","ItsaNull","ItsaNumber","ItsaObject","config","convertedExample","extras","RegExp","objectKeys","exampleKeys","partial","includes","extraKeys","k","rxObjectId","ItsaObjectId","convert","el","proto","isObject","i","ItsaSerialize","ItsaString","ItsaTo","radix","date","getTime","newFloat","parseFloat","newInt","parseInt","toLowerCase","toUpperCase","trim","ItsaTouch","obj","objectPredicates","p","ItsaTruthy","ItsaTypeOf","ItsaUnique","getter","set","Set","has","add","ItsaValidation","newVal","predicate","okOrThrow","ItsaVerify","verifier","response","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"mappings":"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","file":"itsa.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ItsaLib\"] = factory();\n\telse\n\t\troot[\"ItsaLib\"] = factory();\n})(this, function() {\nreturn ","import {ItsaValidateContext, Itsa, ItsaValidator} from \"./itsa\";\nimport {ItsaOrPrimative, primitiveToItsa} from \"./helpers\";\n\ninterface ItsaAnySettings {\n  schemas: Itsa[];\n}\n\nclass ItsaAny {\n  any (this:Itsa, ...options:(ItsaOrPrimative | ItsaOrPrimative[])[]):Itsa {\n    const schemas = options.flat().map(x => primitiveToItsa(x)) as Itsa[];\n    const settings:ItsaAnySettings = { schemas };\n    this.predicates.push({ id: 'any', settings });\n    return this as any as Itsa;\n  }\n}\n\nconst validate:ItsaValidator = {\n  id: 'any',\n  validate: (context:ItsaValidateContext, settings:ItsaAnySettings) => {\n    const { key, val, parent, validation, exists, result } = context;\n    const { schemas } = settings;\n\n    if (schemas.length === 0)\n      return;\n\n    for (const subSchema of schemas) {\n      const subResult = subSchema._validate({\n        key,\n        parent,\n        val,\n        exists,\n        settings: validation,\n        path: context.path,\n      });\n      if (subResult.ok) {\n        return;\n      }\n    }\n\n    result.registerError(`No schemas matched.`);\n  }\n};\n\nItsa.extend(ItsaAny, validate);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaAny { }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\nexport class ItsaAnything {\n  anything(this:Itsa):Itsa {\n    this.predicates.push({ id: 'anything', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaAnything, {\n  id: 'anything',\n  validate: (context:ItsaValidateContext) => {\n\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaAnything { }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\nimport {ItsaOrPrimative, primitiveToItsa} from \"./helpers\";\n\ninterface ItsaArraySettings {\n  example?: Itsa;\n}\n\nexport class ItsaArray {\n  array(this:Itsa, example?:ItsaOrPrimative):Itsa {\n    const settings:ItsaArraySettings = { example: example ? primitiveToItsa(example) : null };\n    this.predicates.push({ id: 'array', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaArray, {\n  id: 'array',\n  validate: (context:ItsaValidateContext, settings:ItsaArraySettings) => {\n    const { val, validation, exists, result, type } = context;\n    const { example } = settings;\n\n    if (!Array.isArray(val)) return result.registerError(`Expected array but found ${type}`);\n\n    if (!example) return;\n    if (!val.length) return;\n\n    for (let key=0; key < val.length; key++) {\n      const subVal = val[key];\n      const subResult = example._validate({\n        key,\n        parent: val,\n        val:subVal,\n        exists,\n        settings: validation,\n        path: [...context.path, key],\n      });\n      result.registerResult(subResult);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaArray { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\n\nexport interface ItsaBetweenExtraSettings {\n  inclusive?:boolean;\n}\n\nexport interface ItsaBetweenSettings extends ItsaBetweenExtraSettings {\n  min:any;\n  max:any;\n  inclusive?:boolean;\n}\n\nexport class ItsaBetween {\n  between(this:Itsa, min:any, max:any, extraSettings:ItsaBetweenExtraSettings = {}):Itsa{\n    const settings = extraSettings as ItsaBetweenSettings;\n    settings.min = min;\n    settings.max = max;\n    this.predicates.push({ id: 'between', settings:settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaBetween, {\n  id: 'between',\n  validate: (context:ItsaValidateContext, settings:ItsaBetweenSettings) => {\n    const { val, result } = context;\n    const { min, max } = settings;\n    const inclusive = settings.inclusive ?? true;\n    const isTooLow = inclusive ? (val < min) : (val <= min);\n    if (isTooLow) result.registerError(`Value cannot be under ${min}`);\n    const isTooHigh = inclusive ? (val > max) : (val >= max);\n    if (isTooHigh) result.registerError(`Value cannot be above ${max}`);\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaBetween { }\n}\n","\nimport { ItsaValidateContext } from \"./itsa\";\nimport { Itsa } from \"./itsa\";\n\nexport class ItsaBoolean {\n  boolean(this:Itsa):Itsa{\n    this.predicates.push({ id: 'boolean', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaBoolean, {\n  id: 'boolean',\n  validate: (context:ItsaValidateContext) => {\n    const { type, result } = context;\n    if (type !== 'boolean') result.registerError(`Expected bool but found ${type}`);\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaBoolean { }\n}\n","\nimport {itsa, Itsa} from \"./itsa\";\n\nexport class ItsaClone {\n  clone(this:Itsa):Itsa{\n    const raw = JSON.parse(JSON.stringify(this));\n    return itsa.load(raw);\n  }\n}\n\nItsa.extend(ItsaClone);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaClone { }\n}\n","\nimport { ItsaValidateContext } from \"./itsa\";\nimport { Itsa } from \"./itsa\";\n\nexport interface ItsaConstructorSettings {\n  cls:Function;\n}\n\nexport class ItsaConstructor {\n  constructorIs(this:Itsa, cls:Function):Itsa{\n    const settings: ItsaConstructorSettings = { cls };\n    this.predicates.push({ id: 'constructor', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaConstructor, {\n  id: 'constructor',\n  validate: (context:ItsaValidateContext, settings: ItsaConstructorSettings) => {\n    const { val, result } = context;\n    const isMatch = val !== null && val !== undefined && val.constructor === settings.cls;\n    if (!isMatch) return result.registerError(`Expected to be ${settings.cls}`);\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaConstructor { }\n}\n","\nimport { Itsa, ItsaValidateContext } from \"./itsa\";\n\nexport interface ItsaConvertSettings {\n  converter:Function;\n}\n\nexport class ItsaConvert {\n  convert(this:Itsa, converter:Function):Itsa{\n    const settings: ItsaConvertSettings = { converter };\n    this.predicates.push({ id: 'convert', settings });\n    return this as any as Itsa;\n  }\n  to(this:Itsa, converter:Function):Itsa{\n    const settings: ItsaConvertSettings = { converter };\n    this.predicates.push({ id: 'convert', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaConvert, {\n  id: 'convert',\n  validate: (context:ItsaValidateContext, settings: ItsaConvertSettings) => {\n    const { val, setVal, result } = context;\n    const { converter } = settings;\n    if (typeof converter !== 'function') return;\n    try {\n      const newVal = converter(val);\n      setVal(newVal);\n    }catch(e){\n      result.registerError(e);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaConvert { }\n}\n\n","\nimport { ItsaValidateContext } from \"./itsa\";\nimport { Itsa } from \"./itsa\";\n\nexport class ItsaDate {\n  date(this:Itsa):Itsa{\n    this.predicates.push({ id: 'date', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaDate, {\n  id: 'date',\n  validate: (context:ItsaValidateContext) => {\n    const { val, result } = context;\n    const type = Object.prototype.toString.call(val);\n    if (type !== \"[object Date]\") {\n      return result.registerError(`Expected date but found ${type}`);\n    }\n    if (!isFinite(val)) {\n      result.registerError(`Date is not valid`);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaDate { }\n}\n\n","\nimport { Itsa, ItsaValidateContext } from \"./itsa\";\n\nexport interface ItsaDefaultSettings {\n  val?:any;\n  falsy?: boolean;\n}\n\nexport class ItsaDefault {\n  default(this:Itsa, val, settings:ItsaDefaultSettings = {}):Itsa{\n    settings.val = val;\n    this.predicates.push({ id: 'default', settings });\n    return this as any as Itsa;\n  }\n  defaultNow(this:Itsa):Itsa{\n    this.predicates.push({ id: 'defaultNow', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(\n  ItsaDefault,\n  ...[\n    {\n      id: 'default',\n      validate: (context:ItsaValidateContext, settings:ItsaDefaultSettings) => {\n        const { val, setVal } = context;\n        const falsy = settings.falsy ?? false;\n        const doReplace = falsy ? !val : (val === null || val === undefined);\n        if (doReplace) {\n          setVal(settings.val);\n        }\n      }\n    },\n    {\n      id: 'defaultNow',\n      validate: (context:ItsaValidateContext) => {\n        const { val, setVal } = context;\n        if (val === null || val === undefined) {\n          setVal(new Date());\n        }\n      }\n    }\n  ]\n);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaDefault { }\n}\n\n","\nimport { Itsa, ItsaValidateContext } from \"./itsa\";\n\nconst rx = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\nexport class ItsaEmail {\n  email(this:Itsa):Itsa{\n    this.predicates.push({ id: 'email', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaEmail, {\n  id: 'email',\n  validate: (context:ItsaValidateContext) => {\n    const { val, type, result } = context;\n    if (type !== 'string') return result.registerError(`Expected email but found ${type}`);\n    const isValid = rx.test(val);\n    if (!isValid) {\n      result.registerError('Email address is invalid');\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaEmail { }\n}\n\n","\nimport { Itsa, ItsaValidateContext } from \"./itsa\";\n\nexport interface ItsaEqualSettings {\n  strict?:boolean;\n  example?:any;\n}\n\nexport class ItsaEqual {\n  equal(this:Itsa, val:any, settings:ItsaEqualSettings = {}):Itsa{\n    settings.example = val;\n    this.predicates.push({ id: 'equal', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaEqual, {\n  id: 'equal',\n  validate: (context:ItsaValidateContext, settings:ItsaEqualSettings) => {\n    const { val, result } = context;\n    const { example } = settings;\n    const strict = settings.strict ?? true;\n    const isEqual = strict ? (val === example) : (val == example);\n    if (!isEqual) {\n      result.registerError(`Did not equal ${example}`);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaEqual { }\n}\n\n","\nimport { Itsa, ItsaValidateContext} from \"./itsa\";\n\nexport class ItsaFalsy {\n  falsy(this:Itsa):Itsa{\n    this.predicates.push({ id: 'falsy', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaFalsy, {\n  id: 'falsy',\n  validate: (context:ItsaValidateContext) => {\n    const { val, result } = context;\n    if (val) return result.registerError(`Expected falsy value.`);\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaFalsy { }\n}\n\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\nimport {ItsaOrPrimative, primitiveToItsa} from \"./helpers\";\n\ninterface ItsaFunctionSettings {\n  length?:Itsa;\n}\n\ninterface ItsaFunctionIncomingSettings {\n  length?:ItsaOrPrimative;\n}\n\nexport class ItsaFunction {\n  function(this:Itsa, settings:ItsaFunctionIncomingSettings = {}):Itsa{\n    if (settings.length) settings.length = primitiveToItsa(settings.length);\n    this.predicates.push({ id: 'function', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaFunction, {\n  id: 'function',\n  validate: (context:ItsaValidateContext, settings:ItsaFunctionSettings) => {\n    const { val, type, result } = context;\n    if (type !== 'function') return result.registerError('Expected function');\n    if (settings.length) {\n      const subResult = settings.length._validate({\n        key: 'length',\n        parent: null,\n        val: val.length,\n        exists: true,\n        settings: context.validation,\n        path: context.path,\n      });\n      result.registerResult(subResult);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaFunction { }\n}\n\n","\nimport {itsa, Itsa} from \"./itsa\";\n\nexport declare type ItsaOrPrimative = Itsa | number | string | boolean | null | undefined | Function;\n\n\nexport function primitiveToItsa (val:ItsaOrPrimative):Itsa {\n  if (val instanceof Itsa) {\n    return val;\n  }else if (typeof val === 'function') {\n    return itsa.constructorIs(val);\n  }else {\n    return itsa.equal(val);\n  }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\ninterface ItsaInstanceOfSettings {\n  cls: any;\n}\n\nexport class ItsaInstanceOf {\n  instanceof(this: Itsa, cls:any):Itsa {\n    const settings:ItsaInstanceOfSettings = { cls };\n    this.predicates.push({ id: 'instanceof', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaInstanceOf, {\n  id: 'instanceof',\n  validate: (context: ItsaValidateContext, settings:ItsaInstanceOfSettings) => {\n    const {val, result} = context;\n    const isInstance = val instanceof settings.cls;\n    if (!isInstance) {\n      result.registerError(`Expected instance of ${settings.cls}`);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaInstanceOf { }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\nexport class ItsaInteger {\n  integer(this:Itsa):Itsa {\n    this.predicates.push({ id: 'integer', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaInteger, {\n  id: 'integer',\n  validate: (context: ItsaValidateContext) => {\n    const {val, result} = context;\n    const valid = typeof val === \"number\"\n      && isNaN(val) === false\n      && [Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY].indexOf(val) === -1\n      && val % 1 === 0;\n    if (!valid) {\n      result.registerError('Invalid integer');\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaInteger { }\n}\n","\nexport interface ItsaInternalValidationSettings {\n  val:any;\n  key?:string|number;\n  path:(string|number)[];\n  parent?:object|[];\n  exists: boolean;\n  settings:ItsaValidationSettings;\n}\n\nexport interface ItsaValidationSettings {\n  partial?:boolean;\n  exhaustive?:boolean;\n}\n\nexport interface ItsaError {\n  message:string;\n  key:string | number;\n  path:(string | number)[];\n}\n\nexport class ItsaValidationException extends Error {\n  message: string;\n  result: ItsaValidationResult;\n\n  constructor(result:ItsaValidationResult) {\n    super();\n    const path = result.errors[0].path.join('.');\n    this.message = `${path ? `${path}: ` : ''}${result.errors[0].message}`;\n    this.result = result;\n  }\n}\n\nexport class ItsaValidationResult {\n  ok: boolean;\n  errors: ItsaError[] = [];\n  value: any;\n  message?: string;\n\n  okOrThrow(){\n    if (!this.ok) throw new ItsaValidationException(this);\n  }\n\n  addError(error:ItsaError) {\n    this.ok = false;\n    this.message = error.message;\n    this.errors.push(error);\n  }\n\n  addResult(result: ItsaValidationResult) {\n    if (!result.ok) this.ok = false;\n    for (const e of result.errors) {\n      this.errors.push(e);\n    }\n    this.message = this.message || this.errors[0]?.message;\n  }\n}\n\nexport class ItsaValidationResultBuilder extends ItsaValidationResult {\n  ok = true;\n  errors = [];\n  value = undefined;\n  message? = undefined;\n\n  private readonly exhaustive: boolean;\n  private readonly key: string | number;\n  private readonly path: (string | number)[];\n\n  constructor(exhaustive: boolean, key: string | number, path: (string | number)[]) {\n    super();\n    this.key = key;\n    this.exhaustive = exhaustive;\n    this.path = path;\n  }\n\n  registerError (message:string) {\n    const result = new ItsaValidationResult();\n    result.addError({ message, key: this.key, path: this.path });\n    this.addResult(result);\n  }\n\n  registerResult(result: ItsaValidationResult):void{\n    this.addResult(result);\n    if (!this.exhaustive && this.errors.length) {\n      throw 'STOP_ON_FIRST_ERROR';\n    }\n  }\n}\n\nexport interface ItsaValidateContext {\n  parent?:object | [];\n  key?:string | number;\n  path:(string | number)[];\n  exists: boolean;\n  val:any;\n  type: string;\n  setVal:(val:any) => void;\n  validation: ItsaValidationSettings;\n  result: ItsaValidationResultBuilder;\n}\n\nexport interface ItsaPredicate {\n  id:string;\n  settings?:any;\n}\n\nexport interface ItsaValidator {\n  id:string;\n  validate:(ItsaValidateContext, any) => void;\n}\n\ntype ItsaSubclass = new (...args: any[]) => any;\n\nexport class Itsa {\n  predicates:ItsaPredicate[] = [];\n  static validators:{[key:string]:ItsaValidator} = {};\n\n  static extend(cls:ItsaSubclass, ...validators: ItsaValidator[]) {\n    for (const validator of validators) {\n      Itsa.validators[validator.id] = validator;\n    }\n\n    const keys = Object.getOwnPropertyNames(cls.prototype).filter(m => m !== 'constructor');\n    for (const key of keys) {\n      const val = cls.prototype[key];\n      Itsa.prototype[key] = val;\n\n      /* istanbul ignore next */\n      if (typeof val === 'function') {\n        itsa[key] = (...args) => {\n          const it = new Itsa();\n          return it[key](...args);\n        };\n      }\n    }\n  }\n}\n\nexport const itsa:Itsa = { predicates: [] } as Itsa;\n\nimport './any';\nimport './anything';\nimport './array';\nimport './between';\nimport './boolean';\nimport './clone';\nimport './constructor';\nimport './convert';\nimport './date';\nimport './default';\nimport './email';\nimport './equal';\nimport './falsy';\nimport './function';\nimport './instanceof';\nimport './integer';\nimport './length';\nimport './matches';\nimport './max';\nimport './min';\nimport './not-empty';\nimport './null';\nimport './number';\nimport './object';\nimport './objectid';\nimport './serialize';\nimport './string';\nimport './to';\nimport './touch';\nimport './truthy';\nimport './typeof';\nimport './unique';\nimport './validate';\nimport './verify';\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\ninterface ItsaLengthSettings {\n  exactly?:number;\n  min?:number;\n  max?:number;\n}\n\nexport class ItsaLength {\n  length(this: Itsa, min?:number, max?:number):Itsa {\n    let settings:ItsaLengthSettings = {\n      min, max\n    };\n    if (typeof min === 'number' && typeof max !== 'number') {\n      settings = { exactly: min };\n    }\n    if (typeof min !== 'number') {\n      settings = { min: 1 };\n    }\n    this.predicates.push({ id: 'length', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaLength, {\n  id: 'length',\n  validate: (context: ItsaValidateContext, settings:ItsaLengthSettings) => {\n    const {val, result} = context;\n    const len = val ? val.length : null;\n    if (typeof len !== 'number') {\n      return result.registerError('Invalid length');\n    }\n    if (typeof settings.exactly === 'number' && settings.exactly !== len) {\n      return result.registerError(`Expected length to be ${settings.exactly}`);\n    }\n    if (typeof settings.min === 'number' && settings.min > len) {\n      return result.registerError(`Expected length to be at least ${settings.min}`);\n    }\n    if (typeof settings.max === 'number' && settings.max < len) {\n      return result.registerError(`Expected length to be at most ${settings.max}`);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaLength { }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\ninterface ItsaMatchesSettings {\n  regex:RegExp;\n}\n\nexport class ItsaMatches {\n  matches(this: Itsa, regex:RegExp):Itsa {\n    const settings:ItsaMatchesSettings = { regex };\n    this.predicates.push({ id: 'matches', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaMatches, {\n  id: 'matches',\n  validate: (context: ItsaValidateContext, settings: ItsaMatchesSettings) => {\n    const {val, result} = context;\n    const valid = settings.regex.test(String(val));\n    if (!valid) {\n      result.registerError(`Does not match ${settings.regex}`);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaMatches { }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\ninterface ItsaMaxSettings {\n  max:any;\n  inclusive:boolean;\n}\n\nexport class ItsaMax {\n  max(this:Itsa, max:any, inclusive?:boolean):Itsa {\n    inclusive = inclusive ?? true;\n    const settings:ItsaMaxSettings = { max, inclusive };\n    this.predicates.push({ id: 'max', settings });\n    return this as any as Itsa;\n  }\n  under(this:Itsa, max:any, inclusive?:boolean):Itsa {\n    inclusive = inclusive ?? false;\n    const settings:ItsaMaxSettings = { max, inclusive };\n    this.predicates.push({ id: 'max', settings });\n    return this as any as Itsa;\n  }\n  below(this:Itsa, max:any, inclusive?:boolean):Itsa {\n    inclusive = inclusive ?? false;\n    const settings:ItsaMaxSettings = { max, inclusive };\n    this.predicates.push({ id: 'max', settings });\n    return this as any as Itsa;\n  }\n  atMost(this:Itsa, max:any, inclusive?:boolean):Itsa {\n    inclusive = inclusive ?? true;\n    const settings:ItsaMaxSettings = { max, inclusive };\n    this.predicates.push({ id: 'max', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaMax, {\n  id: 'max',\n  validate: (context: ItsaValidateContext, settings: ItsaMaxSettings) => {\n    const { val, result } = context;\n    const { max, inclusive } = settings;\n    if (inclusive) {\n      const ok = val <= max;\n      if (!ok) result.registerError(`Value must be at most ${max}`);\n    } else {\n      const ok = val < max;\n      if (!ok) result.registerError(`Value must be less than ${max}`);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaMax { }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\ninterface ItsaMinSettings {\n  min:any;\n  inclusive:boolean;\n}\n\nexport class ItsaMin {\n  min(this: Itsa, min:any, inclusive?:boolean):Itsa {\n    inclusive = inclusive ?? true;\n    const settings:ItsaMinSettings = { min, inclusive };\n    this.predicates.push({ id: 'min', settings });\n    return this as any as Itsa;\n  }\n  over(this: Itsa, min:any, inclusive?:boolean):Itsa {\n    inclusive = inclusive ?? false;\n    const settings:ItsaMinSettings = { min, inclusive };\n    this.predicates.push({ id: 'min', settings });\n    return this as any as Itsa;\n  }\n  above(this: Itsa, min:any, inclusive?:boolean):Itsa {\n    inclusive = inclusive ?? false;\n    const settings:ItsaMinSettings = { min, inclusive };\n    this.predicates.push({ id: 'min', settings });\n    return this as any as Itsa;\n  }\n  atLeast(this: Itsa, min:any, inclusive?:boolean):Itsa {\n    inclusive = inclusive ?? true;\n    const settings:ItsaMinSettings = { min, inclusive };\n    this.predicates.push({ id: 'min', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaMin, {\n  id: 'min',\n  validate: (context: ItsaValidateContext, settings: ItsaMinSettings) => {\n    const { val, result } = context;\n    const { min, inclusive } = settings;\n    if (inclusive) {\n      const ok = val >= min;\n      if (!ok) result.registerError(`Value must be at least ${min}`);\n    } else {\n      const ok = val > min;\n      if (!ok) result.registerError(`Value must be greater than ${min}`);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaMin { }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\nexport class ItsaNotEmpty {\n  notEmpty(this:Itsa):Itsa {\n    this.predicates.push({ id: 'notEmpty', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaNotEmpty, {\n  id: 'notEmpty',\n  validate: (context: ItsaValidateContext) => {\n    const { val, result } = context;\n    const len = val ? val.length : null;\n    if (typeof len === 'number' && len) {\n      return;\n    }\n\n    if (Object.prototype.toString.call(val) === \"[object Object]\") {\n      let hasFields = false;\n      for (const key in val) {\n        if (!val.hasOwnProperty(key)) { continue; }\n        hasFields = true;\n        break;\n      }\n      if (!hasFields) {\n        result.registerError(`Object cannot be empty`);\n      }\n      return;\n    }\n\n    result.registerError(`Value cannot be empty`);\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaNotEmpty { }\n}\n","import {Itsa} from \"./itsa\";\nimport {ItsaEqualSettings} from \"./equal\";\n\nexport class ItsaNull {\n  null(this:Itsa):Itsa {\n    const settings:ItsaEqualSettings = { example: null, strict: true };\n    this.predicates.push({ id: 'equal', settings });\n    return this as any as Itsa;\n  }\n  undef(this:Itsa):Itsa {\n    const settings:ItsaEqualSettings = { example: undefined, strict: true };\n    this.predicates.push({ id: 'equal', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaNull);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaNull { }\n}\n","import {Itsa, ItsaValidateContext} from \"./itsa\";\n\nexport class ItsaNumber {\n  number(this:Itsa):Itsa {\n    this.predicates.push({ id: 'number' });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaNumber, {\n  id: 'number',\n  validate: (context: ItsaValidateContext) => {\n    const {val, type, result} = context;\n    if (type !== 'number') return result.registerError(`Expected number but type is ${type}.`);\n    if (isNaN(val)) return result.registerError(`Expected number but found NaN.`);\n    if (!isFinite(val)) return result.registerError(`Expected number but found infinity.`);\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaNumber { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\nimport {ItsaOrPrimative, primitiveToItsa} from \"./helpers\";\n\ninterface ItsaObjectExample {\n  [key: string]:Itsa;\n}\n\ninterface ItsaObjectExampleWithPrimitives {\n  [key: string]:ItsaOrPrimative;\n}\n\ninterface ItsaObjectConfig {\n  extras?: boolean;\n  key?: Itsa;\n  value?: Itsa;\n}\n\nexport interface ItsaObjectSettings {\n  example?: ItsaObjectExample;\n  config: ItsaObjectConfig;\n}\n\nexport class ItsaObject {\n  object(this:Itsa, example?:ItsaObjectExampleWithPrimitives, config:ItsaObjectConfig = {}):Itsa{\n    let convertedExample = null;\n    if (example) {\n      convertedExample = {};\n      for (const key in example) {\n        convertedExample[key] = primitiveToItsa(example[key]);\n      }\n    }\n    if (config.key) {\n      config.key = primitiveToItsa(config.key);\n    }\n    if (config.value) {\n      config.value = primitiveToItsa(config.value);\n    }\n    const settings:ItsaObjectSettings = { example:convertedExample as ItsaObjectExample, config };\n    this.predicates.push({ id: 'object', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaObject, {\n  id: 'object',\n  validate: (context:ItsaValidateContext, settings:ItsaObjectSettings) => {\n    const { val, parent, validation, result, type } = context;\n    const { example, config } = settings;\n    const extras = config.extras ?? false;\n\n    // Validate object\n    if (!val) return result.registerError(`Expected object but value is ${val}.`);\n    if (type !== \"object\") return result.registerError(`Expected object but type is ${type}.`);\n    if (val instanceof RegExp) return result.registerError(`Expected object but type is regex.`);\n    if (val instanceof Date) return result.registerError(`Expected object but type is date.`);\n    if (Array.isArray(val)) return result.registerError(`Expected object but type is array.`);\n\n    const objectKeys = Object.keys(val);\n\n    if (example) {\n      // Validate according to example\n      const exampleKeys = Object.keys(example);\n      for (const key of exampleKeys) {\n        // For root object, we might skip missing fields\n        if (!parent && validation.partial && !objectKeys.includes(key)) {\n          continue;\n        }\n\n        const subSchema = example[key];\n        const subResult = subSchema._validate({\n          key,\n          parent:val,\n          val: val[key],\n          exists: key in val,\n          settings: validation,\n          path: [...context.path, key],\n        });\n        result.registerResult(subResult);\n      }\n\n      // Error for extra properties?\n      if (!extras) {\n        const extraKeys = objectKeys.filter(k => !exampleKeys.includes(k));\n        if (extraKeys.length) {\n          result.registerError(`Extra unknown properties: ${extraKeys.join(', ')}`);\n        }\n      }\n    }\n\n    if (config.key) {\n      for (const key of objectKeys) {\n        const subResult = config.key._validate({\n          key,\n          parent: val,\n          val: key,\n          exists: true,\n          settings: validation,\n          path: [...context.path, key],\n        });\n        result.registerResult(subResult);\n      }\n    }\n\n    if (config.value) {\n      for (const key of objectKeys) {\n        const subVal = val[key];\n        const subResult = config.value._validate({\n          key,\n          parent: val,\n          val: subVal,\n          exists: true,\n          settings: validation,\n          path: [...context.path, key],\n        });\n        result.registerResult(subResult);\n      }\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaObject { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\n\nconst rxObjectId = /^[0-9a-f]{24}$/i;\n\nexport class ItsaObjectId {\n  objectid(this:Itsa):Itsa{\n    this.predicates.push({ id: 'objectid', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaObjectId, {\n  id: 'objectid',\n  validate: (context:ItsaValidateContext, settings?:any) => {\n    const { val, result, type } = context;\n    if (!val) return result.registerError('ObjectId is required');\n    if (type !== 'string') return result.registerError('ObjectId must be a string');\n    if (val.length !== 24) return result.registerError('ObjectId must have 24 characters');\n    if (!rxObjectId.test(val)) return result.registerError('ObjectId may only contain 0-9, a-z');\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaObjectId { }\n}\n","\nimport {Itsa, ItsaPredicate} from \"./itsa\";\n\ntype RawItsa = {predicates:ItsaPredicate[]};\n\nconst convert = (el:any) => {\n  const proto = Object.prototype.toString.call(el);\n  const isObject = `[object Object]` === proto;\n  const isArray = `[object Array]` === proto;\n  if (!isObject && !isArray) {\n    return el;\n  }\n\n  // replace sub-schemas: depth first\n  for (const key in el) {\n    el[key] = convert(el[key]);\n  }\n\n  if (isObject && el.predicates) {\n    const i = new Itsa();\n    i.predicates = el.predicates;\n    return i;\n  }\n\n  return el;\n}\n\nexport class ItsaSerialize {\n  load(this:Itsa, raw:RawItsa):Itsa{\n    this.predicates = convert(raw).predicates;\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaSerialize);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaSerialize { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\n\nexport class ItsaString {\n  string(this:Itsa):Itsa{\n    this.predicates.push({ id: 'string', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaString, {\n  id: 'string',\n  validate: (context:ItsaValidateContext) => {\n    const { type, result } = context;\n    if (type !== 'string') return result.registerError(`Expected string`);\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaString { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\n\ninterface ItsaToIntSettings {\n  radix?:number;\n}\n\nexport class ItsaTo {\n  toDate(this:Itsa):Itsa{\n    this.predicates.push({ id: 'toDate', settings:null });\n    return this as any as Itsa;\n  }\n  toFloat(this:Itsa):Itsa{\n    this.predicates.push({ id: 'toFloat', settings:null });\n    return this as any as Itsa;\n  }\n  toInt(this:Itsa, radix?:number):Itsa{\n    const settings:ItsaToIntSettings = { radix };\n    this.predicates.push({ id: 'toInt', settings });\n    return this as any as Itsa;\n  }\n  toLowerCase(this:Itsa):Itsa{\n    this.predicates.push({ id: 'toLowerCase' });\n    return this as any as Itsa;\n  }\n  toUpperCase(this:Itsa):Itsa{\n    this.predicates.push({ id: 'toUpperCase' });\n    return this as any as Itsa;\n  }\n  toNow(this:Itsa):Itsa{\n    this.predicates.push({ id: 'toNow' });\n    return this as any as Itsa;\n  }\n  toString(this:Itsa):Itsa{\n    this.predicates.push({ id: 'toString' });\n    return this as any as Itsa;\n  }\n  toTrimmed(this:Itsa):Itsa{\n    this.predicates.push({ id: 'toTrimmed' });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(\n  ItsaTo,\n  {\n    id: 'toDate',\n    validate: (context:ItsaValidateContext) => {\n      const { val, setVal, result } = context;\n      const date = new Date(val);\n      if (!isFinite(date.getTime())) return result.registerError(`Date conversion failed`);\n      setVal(date);\n    }\n  },\n  {\n    id: 'toFloat',\n    validate: (context:ItsaValidateContext) => {\n      const { val, setVal, result } = context;\n      const newFloat = parseFloat(val);\n      if (isNaN(newFloat)) return result.registerError(`Float conversion failed`);\n      setVal(newFloat);\n    }\n  },\n  {\n    id: 'toInt',\n    validate: (context:ItsaValidateContext, settings:ItsaToIntSettings) => {\n      const { val, setVal, result } = context;\n      const { radix } = settings;\n      const newInt = parseInt(val, radix ?? 10);\n      if (isNaN(newInt)) return result.registerError(`Int conversion failed`);\n      setVal(newInt);\n    }\n  },\n  {\n    id: 'toLowerCase',\n    validate: (context:ItsaValidateContext) => {\n      const { val, setVal } = context;\n      setVal(String(val).toLowerCase());\n    }\n  },\n  {\n    id: 'toUpperCase',\n    validate: (context:ItsaValidateContext) => {\n      const { val, setVal } = context;\n      setVal(String(val).toUpperCase());\n    }\n  },\n  {\n    id: 'toNow',\n    validate: (context:ItsaValidateContext) => {\n      const { setVal } = context;\n      setVal(new Date());\n    }\n  },\n  {\n    id: 'toString',\n    validate: (context:ItsaValidateContext) => {\n      const { val, setVal } = context;\n      setVal(String(val));\n    }\n  },\n  {\n    id: 'toTrimmed',\n    validate: (context:ItsaValidateContext) => {\n      const { val, setVal } = context;\n      setVal(String(val).trim());\n    }\n  },\n);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaTo { }\n}\n","\nimport { Itsa } from './itsa';\nimport { ItsaObjectSettings } from './object';\n\nclass ItsaTouch {\n  touch<X>(this:Itsa, obj:X):X {\n    const objectPredicates = this.predicates.filter(p => p.id === 'object');\n    if (!objectPredicates.length) throw new Error(`This is not an object schema.`);\n    if (!obj) throw new Error(`The given obj cannot be falsy.`);\n    for (const predicate of objectPredicates) {\n      const settings = predicate.settings as ItsaObjectSettings;\n      const example = settings.example as any;\n      if (!example) throw new Error(`A schema example is required.`);\n      const keys = Object.keys(example);\n      for (const key of keys) {\n        if (!(key in obj)) {\n          obj[key] = undefined;\n        }\n      }\n    }\n    return obj;\n  }\n}\n\nItsa.extend(ItsaTouch);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaTouch { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\n\nexport class ItsaTruthy {\n  truthy(this:Itsa):Itsa{\n    this.predicates.push({ id: 'truthy', settings:null });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaTruthy, {\n  id: 'truthy',\n  validate: (context:ItsaValidateContext) => {\n    const { val, result } = context;\n    if (!val) return result.registerError(`Expected truthy value.`);\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaTruthy { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\n\ninterface ItsaTypeOfSettings {\n  type: string;\n}\n\nexport class ItsaTypeOf {\n  typeof(this:Itsa, type:string):Itsa{\n    const settings: ItsaTypeOfSettings = { type };\n    this.predicates.push({ id: 'typeof', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaTypeOf, {\n  id: 'typeof',\n  validate: (context:ItsaValidateContext, settings: ItsaTypeOfSettings) => {\n    const { val, result } = context;\n    const { type } = settings;\n    const actualType = typeof val;\n    if (type !== actualType) {\n      result.registerError(`Expected ${type}`);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaTypeOf { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\n\ninterface ItsaUniqueSettings {\n  getter?: Function;\n}\n\nexport class ItsaUnique {\n  unique(this:Itsa, getter?:Function):Itsa{\n    const settings: ItsaUniqueSettings = { getter };\n    this.predicates.push({ id: 'unique', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaUnique, {\n  id: 'unique',\n  validate: (context:ItsaValidateContext, settings: ItsaUniqueSettings) => {\n    const { val, result } = context;\n    const { getter } = settings;\n    const set = new Set();\n    for (const key in val) {\n      let subVal = val[key];\n      if (getter) subVal = getter(subVal);\n      if (set.has(subVal)) {\n        return result.registerError(`${subVal} occurred multiple times`);\n      }\n      set.add(subVal);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaUnique { }\n}\n","\nimport {\n  Itsa,\n  ItsaValidator,\n  ItsaValidateContext,\n  ItsaInternalValidationSettings,\n  ItsaValidationException,\n  ItsaValidationResult,\n  ItsaValidationSettings,\n  ItsaValidationResultBuilder\n} from './itsa';\n\nclass ItsaValidation {\n  _validate(this:Itsa, settings:ItsaInternalValidationSettings):ItsaValidationResultBuilder {\n    const { key } = settings;\n    const result = new ItsaValidationResultBuilder(settings.settings.exhaustive, key, settings.path);\n    result.value = settings.val;\n    try {\n      const setVal = (newVal:any) => {\n        if (settings.parent) {\n          settings.parent[settings.key] = newVal;\n          settings.val = newVal;\n        }else{\n          result.value = newVal;\n        }\n      };\n      for (const predicate of this.predicates) {\n        const validator:ItsaValidator = Itsa.validators[predicate.id];\n\n        /* istanbul ignore next */\n        if (!validator) throw new Error(`Validator not found: ${predicate.id}`);\n\n        const context:ItsaValidateContext = {\n          setVal,\n          result,\n          val: settings.val,\n          key: settings.key,\n          parent: settings.parent,\n          exists: settings.exists,\n          type: typeof settings.val,\n          validation: settings.settings,\n          path: settings.path,\n        };\n        validator.validate(context, predicate.settings);\n        if (!result.ok) return result;\n      }\n    }catch (e){\n      /* istanbul ignore next */\n      if (e !== 'STOP_ON_FIRST_ERROR') throw e;\n    }\n    return result;\n  }\n\n  validate(this:Itsa, val: any, settings:ItsaValidationSettings = {}):ItsaValidationResult {\n    return this._validate({\n      val,\n      settings,\n      key:null,\n      parent:null,\n      exists: true,\n      path: [],\n    });\n  }\n\n  validOrThrow(this:Itsa, val:any, settings?:ItsaValidationSettings) {\n    this.validate(val, settings).okOrThrow();\n  }\n}\n\nItsa.extend(ItsaValidation);\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaValidation { }\n}\n","\nimport {Itsa, ItsaValidateContext} from \"./itsa\";\n\ninterface ItsaVerifySettings {\n  verifier: Function;\n}\n\nexport class ItsaVerify {\n  verify(this:Itsa, verifier:Function):Itsa{\n    const settings: ItsaVerifySettings = { verifier };\n    this.predicates.push({ id: 'verify', settings });\n    return this as any as Itsa;\n  }\n}\n\nItsa.extend(ItsaVerify, {\n  id: 'verify',\n  validate: (context:ItsaValidateContext, settings: ItsaVerifySettings) => {\n    const { val, result } = context;\n    const { verifier } = settings;\n    try {\n      const response = verifier(val);\n      if (typeof response === 'boolean') {\n        if (response === false) {\n          result.registerError(`Value is invalid`);\n        }\n        return;\n      }\n      if (typeof response === 'string') {\n        return result.registerError(response);\n      }\n    }catch(e){\n      if (e === 'STOP_ON_FIRST_ERROR') throw e;\n      return result.registerError(e);\n    }\n  }\n});\n\ndeclare module './itsa' {\n  interface Itsa extends ItsaVerify { }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(589);\n"],"sourceRoot":""}